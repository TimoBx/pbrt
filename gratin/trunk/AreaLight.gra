<Gratin type="pipeline">
 <int name="majorVersion" val="0"/>
 <int name="minorVersion" val="3"/>
 <IOData name="mainWindow">
  <IOData name="graphWidget">
   <IOData name="graph">
    <uint name="nbNodes" val="5"/>
    <string name="nodeStringId-0" val="gbuffersGenericId"/>
    <uint name="nodeVersion-0" val="1"/>
    <string name="nodeName-0" val="genericObjLoader"/>
    <string name="nodePath-0" val="Generic/"/>
    <string name="nodeDesc-0" val="Generic node for 3D object processing"/>
    <string name="nodeHelp-0" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
    <uint name="nodeId-0" val="0"/>
    <uint name="nodeGraphId-0" val="0"/>
    <vector2f name="nodePos-0">
     <float name="0" val="-10988.7"/>
     <float name="1" val="6747.4"/>
    </vector2f>
    <int name="nodeInputNameSize-0" val="0"/>
    <int name="nodeOutputNameSize-0" val="1"/>
    <string name="nodeOutputName-0-0" val="outBuffer0"/>
    <string name="nodeStringId-1" val="_GRATIN_GROUPED_NODES_ID_"/>
    <uint name="nodeVersion-1" val="1"/>
    <string name="nodeName-1" val="imageHistogram"/>
    <string name="nodePath-1" val="Analysis/"/>
    <string name="nodeDesc-1" val="Color histogram of an image "/>
    <string name="nodeHelp-1" val="Compute the colored histogram of an input image. &#xa;This group is composed of a temporary node that allows pixels to be counted. &#xa;It assumes colors to be comprised between 0 and 1. &#xa;&#xa;The scale parameter allows the histogram to be stretched vertically.&#xa;You may modify the last node to display only one channel, the luminance or anything else. &#xa; &#xa; &#xa; "/>
    <uint name="nodeId-1" val="1"/>
    <uint name="nodeGraphId-1" val="0"/>
    <vector2f name="nodePos-1">
     <float name="0" val="-9676.61"/>
     <float name="1" val="8072.32"/>
    </vector2f>
    <int name="nodeInputNameSize-1" val="1"/>
    <int name="nodeOutputNameSize-1" val="1"/>
    <string name="nodeInputName-1-0" val="image"/>
    <string name="nodeOutputName-1-0" val="histogram"/>
    <string name="nodeStringId-2" val="_GRATIN_GROUPED_NODES_ID_"/>
    <uint name="nodeVersion-2" val="1"/>
    <string name="nodeName-2" val="imageHistogram"/>
    <string name="nodePath-2" val="Analysis/"/>
    <string name="nodeDesc-2" val="Color histogram of an image "/>
    <string name="nodeHelp-2" val="Compute the colored histogram of an input image. &#xa;This group is composed of a temporary node that allows pixels to be counted. &#xa;It assumes colors to be comprised between 0 and 1. &#xa;&#xa;The scale parameter allows the histogram to be stretched vertically.&#xa;You may modify the last node to display only one channel, the luminance or anything else. &#xa; &#xa; &#xa; "/>
    <uint name="nodeId-2" val="2"/>
    <uint name="nodeGraphId-2" val="0"/>
    <vector2f name="nodePos-2">
     <float name="0" val="-9726.31"/>
     <float name="1" val="7210.75"/>
    </vector2f>
    <int name="nodeInputNameSize-2" val="1"/>
    <int name="nodeOutputNameSize-2" val="1"/>
    <string name="nodeInputName-2-0" val="image"/>
    <string name="nodeOutputName-2-0" val="histogram"/>
    <string name="nodeStringId-3" val="_GRATIN_GROUPED_NODES_ID_"/>
    <uint name="nodeVersion-3" val="1"/>
    <string name="nodeName-3" val="imageHistogram"/>
    <string name="nodePath-3" val="Analysis/"/>
    <string name="nodeDesc-3" val="Color histogram of an image "/>
    <string name="nodeHelp-3" val="Compute the colored histogram of an input image. &#xa;This group is composed of a temporary node that allows pixels to be counted. &#xa;It assumes colors to be comprised between 0 and 1. &#xa;&#xa;The scale parameter allows the histogram to be stretched vertically.&#xa;You may modify the last node to display only one channel, the luminance or anything else. &#xa; &#xa; &#xa; "/>
    <uint name="nodeId-3" val="3"/>
    <uint name="nodeGraphId-3" val="0"/>
    <vector2f name="nodePos-3">
     <float name="0" val="-9747.78"/>
     <float name="1" val="6377.75"/>
    </vector2f>
    <int name="nodeInputNameSize-3" val="1"/>
    <int name="nodeOutputNameSize-3" val="1"/>
    <string name="nodeInputName-3-0" val="image"/>
    <string name="nodeOutputName-3-0" val="histogram"/>
    <string name="nodeStringId-4" val="_GRATIN_GROUPED_NODES_ID_"/>
    <uint name="nodeVersion-4" val="1"/>
    <string name="nodeName-4" val="imageHistogram"/>
    <string name="nodePath-4" val="Analysis/"/>
    <string name="nodeDesc-4" val="Color histogram of an image "/>
    <string name="nodeHelp-4" val="Compute the colored histogram of an input image. &#xa;This group is composed of a temporary node that allows pixels to be counted. &#xa;It assumes colors to be comprised between 0 and 1. &#xa;&#xa;The scale parameter allows the histogram to be stretched vertically.&#xa;You may modify the last node to display only one channel, the luminance or anything else. &#xa; &#xa; &#xa; "/>
    <uint name="nodeId-4" val="4"/>
    <uint name="nodeGraphId-4" val="1"/>
    <vector2f name="nodePos-4">
     <float name="0" val="-9752.88"/>
     <float name="1" val="5499.47"/>
    </vector2f>
    <int name="nodeInputNameSize-4" val="1"/>
    <int name="nodeOutputNameSize-4" val="1"/>
    <string name="nodeInputName-4-0" val="image"/>
    <string name="nodeOutputName-4-0" val="histogram"/>
    <uint name="nbConnections-0-1" val="1"/>
    <vector2u name="connection-0-1-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-2" val="1"/>
    <vector2u name="connection-0-2-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-3" val="1"/>
    <vector2u name="connection-0-3-0">
     <uint name="0" val="0"/>
     <uint name="1" val="0"/>
    </vector2u>
    <uint name="nbConnections-0-4" val="0"/>
    <uint name="nbConnections-1-2" val="0"/>
    <uint name="nbConnections-1-3" val="0"/>
    <uint name="nbConnections-1-4" val="0"/>
    <uint name="nbConnections-2-3" val="0"/>
    <uint name="nbConnections-2-4" val="0"/>
    <uint name="nbConnections-3-4" val="0"/>
    <bool name="nodeHasWidget-0" val="1"/>
    <IOData name="node-0">
     <string name="filename" val="../../pbrt/scenes/birdbody.obj"/>
     <IOData name="camera">
      <int name="projType" val="1"/>
      <int name="rotType" val="0"/>
      <vector2i name="viewport">
       <int name="0" val="512"/>
       <int name="1" val="512"/>
      </vector2i>
      <vector3f name="sceneCenter">
       <float name="0" val="-0.0039223"/>
       <float name="1" val="-0.814633"/>
       <float name="2" val="0.295191"/>
      </vector3f>
      <float name="sceneRadius" val="6.22701"/>
      <float name="fovy" val="45"/>
      <vector3f name="shift">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="4.65231"/>
      </vector3f>
      <IOData name="trackball">
       <quaternionf name="rotation">
        <float name="0" val="-0.165344"/>
        <float name="1" val="-0.555697"/>
        <float name="2" val="0.376578"/>
        <float name="3" val="0.722513"/>
       </quaternionf>
       <vector2f name="screenCenter">
        <float name="0" val="256"/>
        <float name="1" val="256"/>
       </vector2f>
       <float name="screenRadius" val="512"/>
      </IOData>
     </IOData>
     <string name="genericGlslVersion" val="420"/>
     <string name="genericNodeName" val="genericObjLoader"/>
     <bool name="genericUseVertex" val="1"/>
     <bool name="genericUseTesselation" val="0"/>
     <bool name="genericUseGeometry" val="0"/>
     <bool name="genericUseFragment" val="1"/>
     <int name="genericOutFilter" val="9729"/>
     <int name="genericOutWrap" val="33071"/>
     <bool name="genericUseDepthTest" val="1"/>
     <bool name="genericUseBlending" val="0"/>
     <uint name="genericDepthFunc" val="513"/>
     <uint name="genericBlendSrc" val="1"/>
     <uint name="genericBlendDst" val="0"/>
     <vector4f name="genericBackground">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
      <float name="2" val="0"/>
      <float name="3" val="0"/>
     </vector4f>
     <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec3 inVertex;&#xa;layout(location = 1) in vec3 inNormal;&#xa;layout(location = 2) in vec3 inTangent;&#xa;layout(location = 3) in vec2 inTexcoord;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericVertBody" val="out vec3  normalV;&#xa;out float depthV;&#xa;&#xa;void main() {&#xa;&#x9;mat4 mdv    = view*model;&#xa;&#x9;mat4 mvp    = proj*mdv;&#xa;&#xa;&#x9;normalV     = (mdv*vec4(inNormal,0)).xyz;&#xa;&#x9;depthV      = (clamp(-(mdv*vec4(inVertex,1)).z,zmin,zmax)-zmin)/(zmax-zmin);&#xa;&#x9;gl_Position = mvp*vec4(inVertex,1);&#xa;}&#xa;"/>
     <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericFragBody" val="in vec3  normalV;&#xa;in float depthV;&#xa;&#xa;void main() {&#xa;&#x9;outBuffer0 = vec4(normalize(normalV),depthV);&#xa;}&#xa;"/>
     <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 3) out;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
     <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericTessEBody" val="layout(triangles,equal_spacing,ccw) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = gl_TessCoord.x*gl_in[0].gl_Position;&#xa;&#x9;vec4 p2 = gl_TessCoord.y*gl_in[1].gl_Position;&#xa;&#x9;vec4 p3 = gl_TessCoord.z*gl_in[2].gl_Position;&#xa;&#x9;gl_Position = p1+p2+p3;&#xa;}&#xa;"/>
     <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform mat4 model;&#xa;uniform mat4 view;&#xa;uniform mat4 proj;&#xa;uniform float zmin;&#xa;uniform float zmax;&#xa;"/>
     <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}&#xa;"/>
     <vector2f name="genericTSize">
      <float name="0" val="0"/>
      <float name="1" val="0"/>
     </vector2f>
     <vector2f name="genericTOffset">
      <float name="0" val="512"/>
      <float name="1" val="512"/>
     </vector2f>
     <bool name="genericNeedMouse" val="0"/>
     <bool name="genericNeedKeyboard" val="0"/>
     <uint name="genericNbWidgets" val="0"/>
    </IOData>
    <IOData name="nodeWidget-0">
     <uint name="nbChildren" val="1"/>
     <IOData name="childWidget-0">
      <bool name="trackballCameraKeyframed" val="1"/>
      <IOData name="trackballCameraAttribCurveQ">
       <quaternionf name="currentVal">
        <float name="0" val="1"/>
        <float name="1" val="0"/>
        <float name="2" val="0"/>
        <float name="3" val="0"/>
       </quaternionf>
       <uint name="nbCurves" val="4"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-0.165344"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="-0.555697"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.376578"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-3">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0.722513"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <IOData name="trackballCameraAttribCurveS">
       <vector3f name="currentVal">
        <float name="0" val="0"/>
        <float name="1" val="0"/>
        <float name="2" val="3"/>
       </vector3f>
       <uint name="nbCurves" val="3"/>
       <IOData name="curve-0">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-1">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="0"/>
         </vector2f>
        </IOData>
       </IOData>
       <IOData name="curve-2">
        <int name="interpType" val="0"/>
        <int name="leftType" val="0"/>
        <int name="rightType" val="0"/>
        <IOData name="interpolator">
         <uint name="nbPoints" val="1"/>
         <uint name="nbTangents" val="0"/>
         <vector2f name="controlPoint-0">
          <float name="0" val="0"/>
          <float name="1" val="4.65231"/>
         </vector2f>
        </IOData>
       </IOData>
      </IOData>
      <int name="projection" val="1"/>
      <int name="rotation" val="0"/>
      <uint name="nbChildren" val="0"/>
     </IOData>
    </IOData>
    <vector2f name="nodeOutputPos-0-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-1" val="1"/>
    <IOData name="node-1">
     <uint name="nbNodes" val="2"/>
     <string name="nodeStringId-0" val="jointHistogramID"/>
     <uint name="nodeVersion-0" val="1"/>
     <string name="nodeName-0" val="countPixels"/>
     <string name="nodePath-0" val="Analysis/"/>
     <string name="nodeDesc-0" val="Joint histogram between 2 images"/>
     <string name="nodeHelp-0" val="The joint histogram shows the per pixel correlation between 2 images. &#xa;Pixel intensities of the first and second images respectively correspond to the x- and y-axis.&#xa;A perfect diagonal means that the 2 input images are equals.&#xa;&#xa;By default, the 3 RGB channels are displayed using 3 splats per pixel&#xa;(see the geometry shader to modify any kind of data).  &#xa;&#xa;To display only the luminance for instance: &#xa;change the number of invocations to 1 (1 splat per pixel instead of 3). &#xa;compute the luminances of color1 and color2. &#xa;use them to set the splat position (gl_Position)&#xa;modify the output color as your own conveniance. &#xa;"/>
     <uint name="nodeId-0" val="0"/>
     <uint name="nodeGraphId-0" val="0"/>
     <vector2f name="nodePos-0">
      <float name="0" val="-433.634"/>
      <float name="1" val="1.52673"/>
     </vector2f>
     <int name="nodeInputNameSize-0" val="1"/>
     <int name="nodeOutputNameSize-0" val="1"/>
     <string name="nodeInputName-0-0" val="image"/>
     <string name="nodeOutputName-0-0" val="count"/>
     <string name="nodeStringId-1" val="imgGenericId"/>
     <uint name="nodeVersion-1" val="1"/>
     <string name="nodeName-1" val="histFromCount"/>
     <string name="nodePath-1" val="Generic/"/>
     <string name="nodeDesc-1" val="Generic node for image processing"/>
     <string name="nodeHelp-1" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
     <uint name="nodeId-1" val="1"/>
     <uint name="nodeGraphId-1" val="0"/>
     <vector2f name="nodePos-1">
      <float name="0" val="433.634"/>
      <float name="1" val="-1.52673"/>
     </vector2f>
     <int name="nodeInputNameSize-1" val="1"/>
     <int name="nodeOutputNameSize-1" val="1"/>
     <string name="nodeInputName-1-0" val="numberPixels"/>
     <string name="nodeOutputName-1-0" val="histogram"/>
     <uint name="nbConnections-0-1" val="1"/>
     <vector2u name="connection-0-1-0">
      <uint name="0" val="0"/>
      <uint name="1" val="0"/>
     </vector2u>
     <bool name="nodeHasWidget-0" val="1"/>
     <IOData name="node-0">
      <string name="genericGlslVersion" val="410"/>
      <string name="genericNodeName" val="countPixels"/>
      <bool name="genericUseVertex" val="1"/>
      <bool name="genericUseTesselation" val="0"/>
      <bool name="genericUseGeometry" val="1"/>
      <bool name="genericUseFragment" val="1"/>
      <int name="genericOutFilter" val="9729"/>
      <int name="genericOutWrap" val="33071"/>
      <bool name="genericUseDepthTest" val="0"/>
      <bool name="genericUseBlending" val="1"/>
      <uint name="genericDepthFunc" val="513"/>
      <uint name="genericBlendSrc" val="1"/>
      <uint name="genericBlendDst" val="1"/>
      <vector4f name="genericBackground">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
       <float name="3" val="0"/>
      </vector4f>
      <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericVertBody" val="void main() {&#xa;&#x9;gl_Position  = vec4(vertex,0,1);&#xa;}&#xa;"/>
      <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 count;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericFragBody" val="in vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;count = color;&#xa;}&#xa;"/>
      <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 1) out;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
      <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;}&#xa;"/>
      <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(points) in;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericGeomBody" val="layout(points, invocations = 3) in;&#xa;layout(points, max_vertices = 1) out;&#xa;&#xa;out vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;vec2 coord = gl_in[0].gl_Position.xy*.5+.5;&#xa;&#x9;vec3 pixel = texture(image,coord).xyz*2.-1.;&#xa;&#x9;int id = gl_InvocationID;&#xa;&#xa;&#x9;color = vec4(vec3(0.),1.);&#xa;&#xa;&#x9;color[id] = 1.;&#xa;&#x9;gl_PointSize = 1.;&#xa;&#x9;gl_Position = vec4(pixel[id],0.,0.,1.);&#xa;&#x9;EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
      <vector2f name="genericTSize">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
      </vector2f>
      <vector2f name="genericTOffset">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
      <bool name="genericNeedMouse" val="0"/>
      <bool name="genericNeedKeyboard" val="0"/>
      <uint name="genericNbWidgets" val="0"/>
     </IOData>
     <IOData name="nodeWidget-0">
      <uint name="nbChildren" val="0"/>
     </IOData>
     <vector2f name="nodeInputPos-0-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <vector2f name="nodeOutputPos-0-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <bool name="nodeHasWidget-1" val="1"/>
     <IOData name="node-1">
      <string name="genericGlslVersion" val="410"/>
      <string name="genericNodeName" val="histFromCount"/>
      <bool name="genericUseVertex" val="0"/>
      <bool name="genericUseTesselation" val="0"/>
      <bool name="genericUseGeometry" val="0"/>
      <bool name="genericUseFragment" val="1"/>
      <int name="genericOutFilter" val="9729"/>
      <int name="genericOutWrap" val="33071"/>
      <bool name="genericUseDepthTest" val="0"/>
      <bool name="genericUseBlending" val="0"/>
      <uint name="genericDepthFunc" val="513"/>
      <uint name="genericBlendSrc" val="1"/>
      <uint name="genericBlendDst" val="0"/>
      <vector4f name="genericBackground">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
       <float name="3" val="0"/>
      </vector4f>
      <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
      <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 histogram;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec3 col = texture(numberPixels,vec2(texcoord.x,.5)).xyz*scale;&#xa;&#x9;for(int i=0;i&lt;3;++i) {&#xa;&#x9;&#x9;histogram[i] = col[i]>texcoord.y ? 1. : 0.;&#xa;&#x9;}&#xa;&#x9;histogram.w = 1.;&#xa;}&#xa;"/>
      <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
      <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
      <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
      <vector2f name="genericTSize">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
      </vector2f>
      <vector2f name="genericTOffset">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
      <bool name="genericNeedMouse" val="0"/>
      <bool name="genericNeedKeyboard" val="0"/>
      <uint name="genericNbWidgets" val="1"/>
      <int name="genericWidgetType-0" val="0"/>
      <int name="genericWidgetView-0" val="1"/>
      <string name="genericWidgetName-0" val="scale"/>
      <bool name="genericWidgetKeyframed-0" val="1"/>
     </IOData>
     <IOData name="nodeWidget-1">
      <uint name="nbChildren" val="1"/>
      <IOData name="childWidget-0">
       <bool name="floatAttribKeyframed" val="1"/>
       <float name="floatAttribMinVal" val="0"/>
       <float name="floatAttribMaxVal" val="0.01"/>
       <IOData name="floatAttribCurve">
        <float name="currentVal" val="0.00456"/>
        <uint name="nbCurves" val="1"/>
        <IOData name="curve-0">
         <int name="interpType" val="0"/>
         <int name="leftType" val="0"/>
         <int name="rightType" val="0"/>
         <IOData name="interpolator">
          <uint name="nbPoints" val="1"/>
          <uint name="nbTangents" val="0"/>
          <vector2f name="controlPoint-0">
           <float name="0" val="0"/>
           <float name="1" val="0.00456"/>
          </vector2f>
         </IOData>
        </IOData>
       </IOData>
       <uint name="nbChildren" val="0"/>
      </IOData>
     </IOData>
     <vector2f name="nodeInputPos-1-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <vector2f name="nodeOutputPos-1-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
    </IOData>
    <IOData name="nodeWidget-1">
     <uint name="nbChildren" val="2"/>
     <IOData name="childWidget-0">
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <uint name="nbChildren" val="1"/>
      <IOData name="childWidget-0">
       <bool name="floatAttribKeyframed" val="1"/>
       <float name="floatAttribMinVal" val="0"/>
       <float name="floatAttribMaxVal" val="0.01"/>
       <IOData name="floatAttribCurve">
        <float name="currentVal" val="0.00456"/>
        <uint name="nbCurves" val="1"/>
        <IOData name="curve-0">
         <int name="interpType" val="0"/>
         <int name="leftType" val="0"/>
         <int name="rightType" val="0"/>
         <IOData name="interpolator">
          <uint name="nbPoints" val="1"/>
          <uint name="nbTangents" val="0"/>
          <vector2f name="controlPoint-0">
           <float name="0" val="0"/>
           <float name="1" val="0.00456"/>
          </vector2f>
         </IOData>
        </IOData>
       </IOData>
       <uint name="nbChildren" val="0"/>
      </IOData>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-1-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-1-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-2" val="1"/>
    <IOData name="node-2">
     <uint name="nbNodes" val="2"/>
     <string name="nodeStringId-0" val="jointHistogramID"/>
     <uint name="nodeVersion-0" val="1"/>
     <string name="nodeName-0" val="countPixels"/>
     <string name="nodePath-0" val="Analysis/"/>
     <string name="nodeDesc-0" val="Joint histogram between 2 images"/>
     <string name="nodeHelp-0" val="The joint histogram shows the per pixel correlation between 2 images. &#xa;Pixel intensities of the first and second images respectively correspond to the x- and y-axis.&#xa;A perfect diagonal means that the 2 input images are equals.&#xa;&#xa;By default, the 3 RGB channels are displayed using 3 splats per pixel&#xa;(see the geometry shader to modify any kind of data).  &#xa;&#xa;To display only the luminance for instance: &#xa;change the number of invocations to 1 (1 splat per pixel instead of 3). &#xa;compute the luminances of color1 and color2. &#xa;use them to set the splat position (gl_Position)&#xa;modify the output color as your own conveniance. &#xa;"/>
     <uint name="nodeId-0" val="0"/>
     <uint name="nodeGraphId-0" val="0"/>
     <vector2f name="nodePos-0">
      <float name="0" val="-433.634"/>
      <float name="1" val="1.52673"/>
     </vector2f>
     <int name="nodeInputNameSize-0" val="1"/>
     <int name="nodeOutputNameSize-0" val="1"/>
     <string name="nodeInputName-0-0" val="image"/>
     <string name="nodeOutputName-0-0" val="count"/>
     <string name="nodeStringId-1" val="imgGenericId"/>
     <uint name="nodeVersion-1" val="1"/>
     <string name="nodeName-1" val="histFromCount"/>
     <string name="nodePath-1" val="Generic/"/>
     <string name="nodeDesc-1" val="Generic node for image processing"/>
     <string name="nodeHelp-1" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
     <uint name="nodeId-1" val="1"/>
     <uint name="nodeGraphId-1" val="0"/>
     <vector2f name="nodePos-1">
      <float name="0" val="433.634"/>
      <float name="1" val="-1.52673"/>
     </vector2f>
     <int name="nodeInputNameSize-1" val="1"/>
     <int name="nodeOutputNameSize-1" val="1"/>
     <string name="nodeInputName-1-0" val="numberPixels"/>
     <string name="nodeOutputName-1-0" val="histogram"/>
     <uint name="nbConnections-0-1" val="1"/>
     <vector2u name="connection-0-1-0">
      <uint name="0" val="0"/>
      <uint name="1" val="0"/>
     </vector2u>
     <bool name="nodeHasWidget-0" val="1"/>
     <IOData name="node-0">
      <string name="genericGlslVersion" val="410"/>
      <string name="genericNodeName" val="countPixels"/>
      <bool name="genericUseVertex" val="1"/>
      <bool name="genericUseTesselation" val="0"/>
      <bool name="genericUseGeometry" val="1"/>
      <bool name="genericUseFragment" val="1"/>
      <int name="genericOutFilter" val="9729"/>
      <int name="genericOutWrap" val="33071"/>
      <bool name="genericUseDepthTest" val="0"/>
      <bool name="genericUseBlending" val="1"/>
      <uint name="genericDepthFunc" val="513"/>
      <uint name="genericBlendSrc" val="1"/>
      <uint name="genericBlendDst" val="1"/>
      <vector4f name="genericBackground">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
       <float name="3" val="0"/>
      </vector4f>
      <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericVertBody" val="void main() {&#xa;&#x9;gl_Position  = vec4(vertex,0,1);&#xa;}&#xa;"/>
      <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 count;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericFragBody" val="in vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;count = color;&#xa;}&#xa;"/>
      <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 1) out;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
      <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;}&#xa;"/>
      <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(points) in;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericGeomBody" val="layout(points, invocations = 3) in;&#xa;layout(points, max_vertices = 1) out;&#xa;&#xa;out vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;vec2 coord = gl_in[0].gl_Position.xy*.5+.5;&#xa;&#x9;vec3 pixel = texture(image,coord).xyz*2.-1.;&#xa;&#x9;pixel = vec3(pixel.x, 0,0);&#xa;&#x9;int id = gl_InvocationID;&#xa;&#xa;&#x9;color = vec4(vec3(0.),1.);&#xa;&#xa;&#x9;color[id] = 1.;&#xa;&#x9;gl_PointSize = 1.;&#xa;&#x9;gl_Position = vec4(pixel[id],0.,0.,1.);&#xa;&#x9;EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
      <vector2f name="genericTSize">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
      </vector2f>
      <vector2f name="genericTOffset">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
      <bool name="genericNeedMouse" val="0"/>
      <bool name="genericNeedKeyboard" val="0"/>
      <uint name="genericNbWidgets" val="0"/>
     </IOData>
     <IOData name="nodeWidget-0">
      <uint name="nbChildren" val="0"/>
     </IOData>
     <vector2f name="nodeInputPos-0-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <vector2f name="nodeOutputPos-0-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <bool name="nodeHasWidget-1" val="1"/>
     <IOData name="node-1">
      <string name="genericGlslVersion" val="410"/>
      <string name="genericNodeName" val="histFromCount"/>
      <bool name="genericUseVertex" val="0"/>
      <bool name="genericUseTesselation" val="0"/>
      <bool name="genericUseGeometry" val="0"/>
      <bool name="genericUseFragment" val="1"/>
      <int name="genericOutFilter" val="9729"/>
      <int name="genericOutWrap" val="33071"/>
      <bool name="genericUseDepthTest" val="0"/>
      <bool name="genericUseBlending" val="0"/>
      <uint name="genericDepthFunc" val="513"/>
      <uint name="genericBlendSrc" val="1"/>
      <uint name="genericBlendDst" val="0"/>
      <vector4f name="genericBackground">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
       <float name="3" val="0"/>
      </vector4f>
      <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
      <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 histogram;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec3 col = texture(numberPixels,vec2(texcoord.x,.5)).xyz*scale;&#xa;&#x9;for(int i=0;i&lt;3;++i) {&#xa;&#x9;&#x9;histogram[i] = col[i]>texcoord.y ? 1. : 0.;&#xa;&#x9;}&#xa;&#x9;histogram.w = 1.;&#xa;}&#xa;"/>
      <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
      <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
      <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
      <vector2f name="genericTSize">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
      </vector2f>
      <vector2f name="genericTOffset">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
      <bool name="genericNeedMouse" val="0"/>
      <bool name="genericNeedKeyboard" val="0"/>
      <uint name="genericNbWidgets" val="1"/>
      <int name="genericWidgetType-0" val="0"/>
      <int name="genericWidgetView-0" val="1"/>
      <string name="genericWidgetName-0" val="scale"/>
      <bool name="genericWidgetKeyframed-0" val="1"/>
     </IOData>
     <IOData name="nodeWidget-1">
      <uint name="nbChildren" val="1"/>
      <IOData name="childWidget-0">
       <bool name="floatAttribKeyframed" val="1"/>
       <float name="floatAttribMinVal" val="0"/>
       <float name="floatAttribMaxVal" val="0.01"/>
       <IOData name="floatAttribCurve">
        <float name="currentVal" val="0.00463"/>
        <uint name="nbCurves" val="1"/>
        <IOData name="curve-0">
         <int name="interpType" val="0"/>
         <int name="leftType" val="0"/>
         <int name="rightType" val="0"/>
         <IOData name="interpolator">
          <uint name="nbPoints" val="1"/>
          <uint name="nbTangents" val="0"/>
          <vector2f name="controlPoint-0">
           <float name="0" val="0"/>
           <float name="1" val="0.00463"/>
          </vector2f>
         </IOData>
        </IOData>
       </IOData>
       <uint name="nbChildren" val="0"/>
      </IOData>
     </IOData>
     <vector2f name="nodeInputPos-1-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <vector2f name="nodeOutputPos-1-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
    </IOData>
    <IOData name="nodeWidget-2">
     <uint name="nbChildren" val="2"/>
     <IOData name="childWidget-0">
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <uint name="nbChildren" val="1"/>
      <IOData name="childWidget-0">
       <bool name="floatAttribKeyframed" val="1"/>
       <float name="floatAttribMinVal" val="0"/>
       <float name="floatAttribMaxVal" val="0.01"/>
       <IOData name="floatAttribCurve">
        <float name="currentVal" val="0.00463"/>
        <uint name="nbCurves" val="1"/>
        <IOData name="curve-0">
         <int name="interpType" val="0"/>
         <int name="leftType" val="0"/>
         <int name="rightType" val="0"/>
         <IOData name="interpolator">
          <uint name="nbPoints" val="1"/>
          <uint name="nbTangents" val="0"/>
          <vector2f name="controlPoint-0">
           <float name="0" val="0"/>
           <float name="1" val="0.00463"/>
          </vector2f>
         </IOData>
        </IOData>
       </IOData>
       <uint name="nbChildren" val="0"/>
      </IOData>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-2-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-2-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-3" val="1"/>
    <IOData name="node-3">
     <uint name="nbNodes" val="2"/>
     <string name="nodeStringId-0" val="jointHistogramID"/>
     <uint name="nodeVersion-0" val="1"/>
     <string name="nodeName-0" val="countPixels"/>
     <string name="nodePath-0" val="Analysis/"/>
     <string name="nodeDesc-0" val="Joint histogram between 2 images"/>
     <string name="nodeHelp-0" val="The joint histogram shows the per pixel correlation between 2 images. &#xa;Pixel intensities of the first and second images respectively correspond to the x- and y-axis.&#xa;A perfect diagonal means that the 2 input images are equals.&#xa;&#xa;By default, the 3 RGB channels are displayed using 3 splats per pixel&#xa;(see the geometry shader to modify any kind of data).  &#xa;&#xa;To display only the luminance for instance: &#xa;change the number of invocations to 1 (1 splat per pixel instead of 3). &#xa;compute the luminances of color1 and color2. &#xa;use them to set the splat position (gl_Position)&#xa;modify the output color as your own conveniance. &#xa;"/>
     <uint name="nodeId-0" val="0"/>
     <uint name="nodeGraphId-0" val="0"/>
     <vector2f name="nodePos-0">
      <float name="0" val="-433.634"/>
      <float name="1" val="1.52673"/>
     </vector2f>
     <int name="nodeInputNameSize-0" val="1"/>
     <int name="nodeOutputNameSize-0" val="1"/>
     <string name="nodeInputName-0-0" val="image"/>
     <string name="nodeOutputName-0-0" val="count"/>
     <string name="nodeStringId-1" val="imgGenericId"/>
     <uint name="nodeVersion-1" val="1"/>
     <string name="nodeName-1" val="histFromCount"/>
     <string name="nodePath-1" val="Generic/"/>
     <string name="nodeDesc-1" val="Generic node for image processing"/>
     <string name="nodeHelp-1" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
     <uint name="nodeId-1" val="1"/>
     <uint name="nodeGraphId-1" val="0"/>
     <vector2f name="nodePos-1">
      <float name="0" val="433.634"/>
      <float name="1" val="-1.52673"/>
     </vector2f>
     <int name="nodeInputNameSize-1" val="1"/>
     <int name="nodeOutputNameSize-1" val="1"/>
     <string name="nodeInputName-1-0" val="numberPixels"/>
     <string name="nodeOutputName-1-0" val="histogram"/>
     <uint name="nbConnections-0-1" val="1"/>
     <vector2u name="connection-0-1-0">
      <uint name="0" val="0"/>
      <uint name="1" val="0"/>
     </vector2u>
     <bool name="nodeHasWidget-0" val="1"/>
     <IOData name="node-0">
      <string name="genericGlslVersion" val="410"/>
      <string name="genericNodeName" val="countPixels"/>
      <bool name="genericUseVertex" val="1"/>
      <bool name="genericUseTesselation" val="0"/>
      <bool name="genericUseGeometry" val="1"/>
      <bool name="genericUseFragment" val="1"/>
      <int name="genericOutFilter" val="9729"/>
      <int name="genericOutWrap" val="33071"/>
      <bool name="genericUseDepthTest" val="0"/>
      <bool name="genericUseBlending" val="1"/>
      <uint name="genericDepthFunc" val="513"/>
      <uint name="genericBlendSrc" val="1"/>
      <uint name="genericBlendDst" val="1"/>
      <vector4f name="genericBackground">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
       <float name="3" val="0"/>
      </vector4f>
      <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericVertBody" val="void main() {&#xa;&#x9;gl_Position  = vec4(vertex,0,1);&#xa;}&#xa;"/>
      <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 count;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericFragBody" val="in vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;count = color;&#xa;}&#xa;"/>
      <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 1) out;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
      <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;}&#xa;"/>
      <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(points) in;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericGeomBody" val="layout(points, invocations = 3) in;&#xa;layout(points, max_vertices = 1) out;&#xa;&#xa;out vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;vec2 coord = gl_in[0].gl_Position.xy*.5+.5;&#xa;&#x9;vec3 pixel = texture(image,coord).xyz*2.-1.;&#xa;&#x9;int id = gl_InvocationID;&#xa;&#xa;&#x9;color = vec4(vec3(0.),1.);&#xa;&#xa;&#x9;color[id] = 1.;&#xa;&#x9;gl_PointSize = 1.;&#xa;&#x9;gl_Position = vec4(pixel[id],0.,0.,1.);&#xa;&#x9;EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
      <vector2f name="genericTSize">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
      </vector2f>
      <vector2f name="genericTOffset">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
      <bool name="genericNeedMouse" val="0"/>
      <bool name="genericNeedKeyboard" val="0"/>
      <uint name="genericNbWidgets" val="0"/>
     </IOData>
     <IOData name="nodeWidget-0">
      <uint name="nbChildren" val="0"/>
     </IOData>
     <vector2f name="nodeInputPos-0-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <vector2f name="nodeOutputPos-0-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <bool name="nodeHasWidget-1" val="1"/>
     <IOData name="node-1">
      <string name="genericGlslVersion" val="410"/>
      <string name="genericNodeName" val="histFromCount"/>
      <bool name="genericUseVertex" val="0"/>
      <bool name="genericUseTesselation" val="0"/>
      <bool name="genericUseGeometry" val="0"/>
      <bool name="genericUseFragment" val="1"/>
      <int name="genericOutFilter" val="9729"/>
      <int name="genericOutWrap" val="33071"/>
      <bool name="genericUseDepthTest" val="0"/>
      <bool name="genericUseBlending" val="0"/>
      <uint name="genericDepthFunc" val="513"/>
      <uint name="genericBlendSrc" val="1"/>
      <uint name="genericBlendDst" val="0"/>
      <vector4f name="genericBackground">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
       <float name="3" val="0"/>
      </vector4f>
      <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
      <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 histogram;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec3 col = texture(numberPixels,vec2(texcoord.x,.5)).xyz*scale;&#xa;&#x9;for(int i=0;i&lt;3;++i) {&#xa;&#x9;&#x9;histogram[i] = col[i]>texcoord.y ? 1. : 0.;&#xa;&#x9;}&#xa;&#x9;histogram.w = 1.;&#xa;}&#xa;"/>
      <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
      <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
      <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
      <vector2f name="genericTSize">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
      </vector2f>
      <vector2f name="genericTOffset">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
      <bool name="genericNeedMouse" val="0"/>
      <bool name="genericNeedKeyboard" val="0"/>
      <uint name="genericNbWidgets" val="1"/>
      <int name="genericWidgetType-0" val="0"/>
      <int name="genericWidgetView-0" val="1"/>
      <string name="genericWidgetName-0" val="scale"/>
      <bool name="genericWidgetKeyframed-0" val="1"/>
     </IOData>
     <IOData name="nodeWidget-1">
      <uint name="nbChildren" val="1"/>
      <IOData name="childWidget-0">
       <bool name="floatAttribKeyframed" val="1"/>
       <float name="floatAttribMinVal" val="0"/>
       <float name="floatAttribMaxVal" val="0.01"/>
       <IOData name="floatAttribCurve">
        <float name="currentVal" val="0.00085"/>
        <uint name="nbCurves" val="1"/>
        <IOData name="curve-0">
         <int name="interpType" val="0"/>
         <int name="leftType" val="0"/>
         <int name="rightType" val="0"/>
         <IOData name="interpolator">
          <uint name="nbPoints" val="1"/>
          <uint name="nbTangents" val="0"/>
          <vector2f name="controlPoint-0">
           <float name="0" val="0"/>
           <float name="1" val="0.00085"/>
          </vector2f>
         </IOData>
        </IOData>
       </IOData>
       <uint name="nbChildren" val="0"/>
      </IOData>
     </IOData>
     <vector2f name="nodeInputPos-1-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <vector2f name="nodeOutputPos-1-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
    </IOData>
    <IOData name="nodeWidget-3">
     <uint name="nbChildren" val="2"/>
     <IOData name="childWidget-0">
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <uint name="nbChildren" val="1"/>
      <IOData name="childWidget-0">
       <bool name="floatAttribKeyframed" val="1"/>
       <float name="floatAttribMinVal" val="0"/>
       <float name="floatAttribMaxVal" val="0.01"/>
       <IOData name="floatAttribCurve">
        <float name="currentVal" val="0.00085"/>
        <uint name="nbCurves" val="1"/>
        <IOData name="curve-0">
         <int name="interpType" val="0"/>
         <int name="leftType" val="0"/>
         <int name="rightType" val="0"/>
         <IOData name="interpolator">
          <uint name="nbPoints" val="1"/>
          <uint name="nbTangents" val="0"/>
          <vector2f name="controlPoint-0">
           <float name="0" val="0"/>
           <float name="1" val="0.00085"/>
          </vector2f>
         </IOData>
        </IOData>
       </IOData>
       <uint name="nbChildren" val="0"/>
      </IOData>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-3-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-3-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <bool name="nodeHasWidget-4" val="1"/>
    <IOData name="node-4">
     <uint name="nbNodes" val="2"/>
     <string name="nodeStringId-0" val="jointHistogramID"/>
     <uint name="nodeVersion-0" val="1"/>
     <string name="nodeName-0" val="countPixels"/>
     <string name="nodePath-0" val="Analysis/"/>
     <string name="nodeDesc-0" val="Joint histogram between 2 images"/>
     <string name="nodeHelp-0" val="The joint histogram shows the per pixel correlation between 2 images. &#xa;Pixel intensities of the first and second images respectively correspond to the x- and y-axis.&#xa;A perfect diagonal means that the 2 input images are equals.&#xa;&#xa;By default, the 3 RGB channels are displayed using 3 splats per pixel&#xa;(see the geometry shader to modify any kind of data).  &#xa;&#xa;To display only the luminance for instance: &#xa;change the number of invocations to 1 (1 splat per pixel instead of 3). &#xa;compute the luminances of color1 and color2. &#xa;use them to set the splat position (gl_Position)&#xa;modify the output color as your own conveniance. &#xa;"/>
     <uint name="nodeId-0" val="0"/>
     <uint name="nodeGraphId-0" val="0"/>
     <vector2f name="nodePos-0">
      <float name="0" val="-433.634"/>
      <float name="1" val="1.52673"/>
     </vector2f>
     <int name="nodeInputNameSize-0" val="1"/>
     <int name="nodeOutputNameSize-0" val="1"/>
     <string name="nodeInputName-0-0" val="image"/>
     <string name="nodeOutputName-0-0" val="count"/>
     <string name="nodeStringId-1" val="imgGenericId"/>
     <uint name="nodeVersion-1" val="1"/>
     <string name="nodeName-1" val="histFromCount"/>
     <string name="nodePath-1" val="Generic/"/>
     <string name="nodeDesc-1" val="Generic node for image processing"/>
     <string name="nodeHelp-1" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
     <uint name="nodeId-1" val="1"/>
     <uint name="nodeGraphId-1" val="0"/>
     <vector2f name="nodePos-1">
      <float name="0" val="433.634"/>
      <float name="1" val="-1.52673"/>
     </vector2f>
     <int name="nodeInputNameSize-1" val="1"/>
     <int name="nodeOutputNameSize-1" val="1"/>
     <string name="nodeInputName-1-0" val="numberPixels"/>
     <string name="nodeOutputName-1-0" val="histogram"/>
     <uint name="nbConnections-0-1" val="1"/>
     <vector2u name="connection-0-1-0">
      <uint name="0" val="0"/>
      <uint name="1" val="0"/>
     </vector2u>
     <bool name="nodeHasWidget-0" val="1"/>
     <IOData name="node-0">
      <string name="genericGlslVersion" val="410"/>
      <string name="genericNodeName" val="countPixels"/>
      <bool name="genericUseVertex" val="1"/>
      <bool name="genericUseTesselation" val="0"/>
      <bool name="genericUseGeometry" val="1"/>
      <bool name="genericUseFragment" val="1"/>
      <int name="genericOutFilter" val="9729"/>
      <int name="genericOutWrap" val="33071"/>
      <bool name="genericUseDepthTest" val="0"/>
      <bool name="genericUseBlending" val="1"/>
      <uint name="genericDepthFunc" val="513"/>
      <uint name="genericBlendSrc" val="1"/>
      <uint name="genericBlendDst" val="1"/>
      <vector4f name="genericBackground">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
       <float name="3" val="0"/>
      </vector4f>
      <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericVertBody" val="void main() {&#xa;&#x9;gl_Position  = vec4(vertex,0,1);&#xa;}&#xa;"/>
      <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 count;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericFragBody" val="in vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;count = color;&#xa;}&#xa;"/>
      <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 1) out;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
      <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;}&#xa;"/>
      <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(points) in;&#xa;uniform sampler2D image;&#xa;"/>
      <string name="genericGeomBody" val="layout(points, invocations = 3) in;&#xa;layout(points, max_vertices = 1) out;&#xa;&#xa;out vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;vec2 coord = gl_in[0].gl_Position.xy*.5+.5;&#xa;&#x9;vec3 pixel = texture(image,coord).xyz*2.-1.;&#xa;&#x9;int id = gl_InvocationID;&#xa;&#xa;&#x9;color = vec4(vec3(0.),1.);&#xa;&#xa;&#x9;color[id] = 1.;&#xa;&#x9;gl_PointSize = 1.;&#xa;&#x9;gl_Position = vec4(pixel[id],0.,0.,1.);&#xa;&#x9;EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
      <vector2f name="genericTSize">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
      </vector2f>
      <vector2f name="genericTOffset">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
      <bool name="genericNeedMouse" val="0"/>
      <bool name="genericNeedKeyboard" val="0"/>
      <uint name="genericNbWidgets" val="0"/>
     </IOData>
     <IOData name="nodeWidget-0">
      <uint name="nbChildren" val="0"/>
     </IOData>
     <vector2f name="nodeInputPos-0-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <vector2f name="nodeOutputPos-0-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <bool name="nodeHasWidget-1" val="1"/>
     <IOData name="node-1">
      <string name="genericGlslVersion" val="410"/>
      <string name="genericNodeName" val="histFromCount"/>
      <bool name="genericUseVertex" val="0"/>
      <bool name="genericUseTesselation" val="0"/>
      <bool name="genericUseGeometry" val="0"/>
      <bool name="genericUseFragment" val="1"/>
      <int name="genericOutFilter" val="9729"/>
      <int name="genericOutWrap" val="33071"/>
      <bool name="genericUseDepthTest" val="0"/>
      <bool name="genericUseBlending" val="0"/>
      <uint name="genericDepthFunc" val="513"/>
      <uint name="genericBlendSrc" val="1"/>
      <uint name="genericBlendDst" val="0"/>
      <vector4f name="genericBackground">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
       <float name="2" val="0"/>
       <float name="3" val="0"/>
      </vector4f>
      <string name="genericVertHead" val="#version 410&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
      <string name="genericFragHead" val="#version 410&#xa;&#xa;layout(location = 0) out vec4 histogram;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericFragBody" val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;vec3 col = texture(numberPixels,vec2(texcoord.x,.5)).xyz*scale;&#xa;&#x9;for(int i=0;i&lt;3;++i) {&#xa;&#x9;&#x9;histogram[i] = col[i]>texcoord.y ? 1. : 0.;&#xa;&#x9;}&#xa;&#x9;histogram.w = 1.;&#xa;}&#xa;"/>
      <string name="genericTessCHead" val="#version 410&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
      <string name="genericTessEHead" val="#version 410&#xa;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
      <string name="genericGeomHead" val="#version 410&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D numberPixels;&#xa;uniform float scale;&#xa;"/>
      <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
      <vector2f name="genericTSize">
       <float name="0" val="1"/>
       <float name="1" val="1"/>
      </vector2f>
      <vector2f name="genericTOffset">
       <float name="0" val="0"/>
       <float name="1" val="0"/>
      </vector2f>
      <bool name="genericNeedMouse" val="0"/>
      <bool name="genericNeedKeyboard" val="0"/>
      <uint name="genericNbWidgets" val="1"/>
      <int name="genericWidgetType-0" val="0"/>
      <int name="genericWidgetView-0" val="1"/>
      <string name="genericWidgetName-0" val="scale"/>
      <bool name="genericWidgetKeyframed-0" val="1"/>
     </IOData>
     <IOData name="nodeWidget-1">
      <uint name="nbChildren" val="1"/>
      <IOData name="childWidget-0">
       <bool name="floatAttribKeyframed" val="1"/>
       <float name="floatAttribMinVal" val="0"/>
       <float name="floatAttribMaxVal" val="0.01"/>
       <IOData name="floatAttribCurve">
        <float name="currentVal" val="0.00085"/>
        <uint name="nbCurves" val="1"/>
        <IOData name="curve-0">
         <int name="interpType" val="0"/>
         <int name="leftType" val="0"/>
         <int name="rightType" val="0"/>
         <IOData name="interpolator">
          <uint name="nbPoints" val="1"/>
          <uint name="nbTangents" val="0"/>
          <vector2f name="controlPoint-0">
           <float name="0" val="0"/>
           <float name="1" val="0.00085"/>
          </vector2f>
         </IOData>
        </IOData>
       </IOData>
       <uint name="nbChildren" val="0"/>
      </IOData>
     </IOData>
     <vector2f name="nodeInputPos-1-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
     <vector2f name="nodeOutputPos-1-0">
      <float name="0" val="56.32"/>
      <float name="1" val="28.16"/>
     </vector2f>
    </IOData>
    <IOData name="nodeWidget-4">
     <uint name="nbChildren" val="2"/>
     <IOData name="childWidget-0">
      <uint name="nbChildren" val="0"/>
     </IOData>
     <IOData name="childWidget-1">
      <uint name="nbChildren" val="1"/>
      <IOData name="childWidget-0">
       <bool name="floatAttribKeyframed" val="1"/>
       <float name="floatAttribMinVal" val="0"/>
       <float name="floatAttribMaxVal" val="0.01"/>
       <IOData name="floatAttribCurve">
        <float name="currentVal" val="0.00085"/>
        <uint name="nbCurves" val="1"/>
        <IOData name="curve-0">
         <int name="interpType" val="0"/>
         <int name="leftType" val="0"/>
         <int name="rightType" val="0"/>
         <IOData name="interpolator">
          <uint name="nbPoints" val="1"/>
          <uint name="nbTangents" val="0"/>
          <vector2f name="controlPoint-0">
           <float name="0" val="0"/>
           <float name="1" val="0.00085"/>
          </vector2f>
         </IOData>
        </IOData>
       </IOData>
       <uint name="nbChildren" val="0"/>
      </IOData>
     </IOData>
    </IOData>
    <vector2f name="nodeInputPos-4-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
    <vector2f name="nodeOutputPos-4-0">
     <float name="0" val="56.32"/>
     <float name="1" val="28.16"/>
    </vector2f>
   </IOData>
   <float name="scale" val="5.068"/>
   <vector2f name="offset">
    <float name="0" val="-9023.08"/>
    <float name="1" val="6964.13"/>
   </vector2f>
   <IOData name="animation">
    <uint name="firstFrame" val="0"/>
    <uint name="lastFrame" val="180"/>
    <uint name="currentFrame" val="180"/>
    <uint name="fps" val="24"/>
   </IOData>
  </IOData>
  <IOData name="animationWidget">
   <vector2i name="animationWidgetSize">
    <int name="0" val="1855"/>
    <int name="1" val="433"/>
   </vector2i>
   <IOData name="timelineWidget"/>
  </IOData>
  <IOData name="nodeListWidget"/>
  <IOData name="interactionWidget">
   <float name="scale" val="2.63806"/>
   <vector2f name="offset">
    <float name="0" val="1072.78"/>
    <float name="1" val="304.858"/>
   </vector2f>
  </IOData>
  <IOData name="nodeInterfaceWidget"/>
 </IOData>
</Gratin>
