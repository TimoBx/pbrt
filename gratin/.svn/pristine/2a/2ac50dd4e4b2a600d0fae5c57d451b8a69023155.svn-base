<Gratin type="node">
 <int name="majorVersion" val="0"/>
 <int name="minorVersion" val="2"/>
 <string name="coreHandleStringId" val="imgGenericId"/>
 <uint name="coreHandleVersion" val="1"/>
 <string name="nodeStringId-0" val="BILATERAL_FILTER_ID_"/>
 <uint name="nodeVersion-0" val="1"/>
 <string name="nodeName-0" val="bilateralFilter"/>
 <string name="nodePath-0" val="imaging/"/>
 <string name="nodeDesc-0" val="A simple node for bilateral filter"/>
 <string name="nodeHelp-0" val="A simple node for bilateral filter."/>
 <uint name="nodeId-0" val="1"/>
 <uint name="nodeGraphId-0" val="1"/>
 <vector2f name="nodePos-0">
  <float name="0" val="1805.05"/>
  <float name="1" val="-3133.67"/>
 </vector2f>
 <int name="nodeInputNameSize-0" val="1"/>
 <int name="nodeOutputNameSize-0" val="1"/>
 <string name="nodeInputName-0-0" val="img"/>
 <string name="nodeOutputName-0-0" val="blurred"/>
 <bool name="nodeHasWidget-0" val="1"/>
 <IOData name="node-0">
  <string name="genericGlslVersion" val="420"/>
  <string name="genericNodeName" val="bilateralFilter"/>
  <bool name="genericUseVertex" val="0"/>
  <bool name="genericUseTesselation" val="0"/>
  <bool name="genericUseGeometry" val="0"/>
  <bool name="genericUseFragment" val="1"/>
  <int name="genericOutFilter" val="9729"/>
  <int name="genericOutWrap" val="33071"/>
  <bool name="genericUseDepthTest" val="0"/>
  <bool name="genericUseBlending" val="0"/>
  <uint name="genericDepthFunc" val="513"/>
  <uint name="genericBlendSrc" val="1"/>
  <uint name="genericBlendDst" val="0"/>
  <vector4f name="genericBackground">
   <float name="0" val="0"/>
   <float name="1" val="0"/>
   <float name="2" val="0"/>
   <float name="3" val="0"/>
  </vector4f>
  <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D img;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;"/>
  <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
  <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 blurred;&#xa;uniform sampler2D img;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;"/>
  <string name="genericFragBody" val="in vec2 texcoord;&#xa;#define F 0.619928135&#xa;&#xa;float lum(in vec4 color) {&#xa;&#x9;return length(color.xyz);&#xa;}&#xa;&#xa;void main() {&#xa;&#xa;&#x9;int halfsize = int(ceil(sigmaS/F));&#xa;&#x9;vec2 pixelSize = 1.0/vec2(textureSize(img,0));&#xa;&#xa;&#x9;float facS = -1.0/(2.0*sigmaS*sigmaS);&#xa;&#x9;float facL = -1.0/(2.0*sigmaL*sigmaL);&#xa;&#xa;&#x9;float sumW = 0.0;&#xa;&#x9;vec4  sumC = vec4(0.0);&#xa;&#xa;&#x9;float l = lum(texture(img,texcoord));&#xa;&#xa;&#x9;for(int i=-halfsize;i&lt;=halfsize;++i) {&#xa;&#x9;&#x9;for(int j=-halfsize;j&lt;=halfsize;++j) {&#xa;&#x9;&#x9;&#x9;vec2 pos = vec2(float(i),float(j));&#xa;&#x9;&#x9;&#x9;vec4 col = texture(img,texcoord+pos*pixelSize);&#xa;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;float distS = length(pos);&#xa;&#x9;&#x9;&#x9;float distL = lum(col)-l;&#xa;&#xa;&#x9;&#x9;&#x9;float wS = exp(facS*float(distS*distS));&#xa;&#x9;&#x9;&#x9;float wL = exp(facL*float(distL*distL));&#xa;&#x9;&#x9;&#x9;float w = wS*wL;&#xa;&#xa;&#x9;&#x9;&#x9;sumW += w;&#xa;&#x9;&#x9;&#x9;sumC += col*w;&#xa;&#x9;&#x9;}&#xa;&#x9;}&#xa;&#xa;&#x9;blurred = sumC/sumW;&#xa;}"/>
  <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D img;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;"/>
  <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
  <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D img;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;"/>
  <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
  <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D img;&#xa;uniform float sigmaS;&#xa;uniform float sigmaL;&#xa;"/>
  <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
  <vector2f name="genericTSize">
   <float name="0" val="1"/>
   <float name="1" val="1"/>
  </vector2f>
  <vector2f name="genericTOffset">
   <float name="0" val="0"/>
   <float name="1" val="0"/>
  </vector2f>
  <bool name="genericNeedMouse" val="0"/>
  <bool name="genericNeedKeyboard" val="0"/>
  <uint name="genericNbWidgets" val="2"/>
  <int name="genericWidgetType-0" val="0"/>
  <int name="genericWidgetView-0" val="1"/>
  <string name="genericWidgetName-0" val="sigmaS"/>
  <bool name="genericWidgetKeyframed-0" val="0"/>
  <int name="genericWidgetType-1" val="0"/>
  <int name="genericWidgetView-1" val="1"/>
  <string name="genericWidgetName-1" val="sigmaL"/>
  <bool name="genericWidgetKeyframed-1" val="0"/>
 </IOData>
 <IOData name="nodeWidget-0">
  <uint name="nbChildren" val="2"/>
  <IOData name="childWidget-0">
   <bool name="floatAttribKeyframed" val="0"/>
   <float name="floatAttribMinVal" val="0"/>
   <float name="floatAttribMaxVal" val="10"/>
   <IOData name="floatAttribCurve">
    <float name="currentVal" val="1"/>
    <uint name="nbCurves" val="1"/>
    <IOData name="curve-0">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="1"/>
      </vector2f>
     </IOData>
    </IOData>
   </IOData>
   <uint name="nbChildren" val="0"/>
  </IOData>
  <IOData name="childWidget-1">
   <bool name="floatAttribKeyframed" val="0"/>
   <float name="floatAttribMinVal" val="0"/>
   <float name="floatAttribMaxVal" val="10"/>
   <IOData name="floatAttribCurve">
    <float name="currentVal" val="1"/>
    <uint name="nbCurves" val="1"/>
    <IOData name="curve-0">
     <int name="interpType" val="0"/>
     <int name="leftType" val="0"/>
     <int name="rightType" val="0"/>
     <IOData name="interpolator">
      <uint name="nbPoints" val="1"/>
      <uint name="nbTangents" val="0"/>
      <vector2f name="controlPoint-0">
       <float name="0" val="0"/>
       <float name="1" val="1"/>
      </vector2f>
     </IOData>
    </IOData>
   </IOData>
   <uint name="nbChildren" val="0"/>
  </IOData>
 </IOData>
 <vector2f name="nodeInputPos-0-0">
  <float name="0" val="33.33"/>
  <float name="1" val="16.61"/>
 </vector2f>
 <vector2f name="nodeOutputPos-0-0">
  <float name="0" val="33.33"/>
  <float name="1" val="16.61"/>
 </vector2f>
</Gratin>
