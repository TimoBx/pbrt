<gratin file="customNode">
 <string val="HSVToRGB" name="customHandleName"/>
 <string val="filters/colorConv/" name="customHandlePath"/>
 <string val="HSV to RGB" name="customHandleDesc"/>
 <string val="Convert the input HSV color into the RGB color space" name="customHandleHelp"/>
 <int val="1" name="customHandleInputDescSize"/>
 <int val="1" name="customHandleOutputDescSize"/>
 <string val="hsvImg" name="customHandleInputDesc-0"/>
 <string val="RGBSpace" name="customHandleOutputDesc-0"/>
 <string val="imgGeneric" name="origHandleName"/>
 <string val="generic/" name="origHandlePath"/>
 <string val="Generic node for image processing" name="origHandleDesc"/>
 <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node beacause these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="origHandleHelp"/>
 <int val="1" name="origHandleInputDescSize"/>
 <int val="1" name="origHandleOutputDescSize"/>
 <string val="hsvImg" name="origHandleInputDesc-0"/>
 <string val="RGBSpace" name="origHandleOutputDesc-0"/>
 <string val="imgGeneric" name="nodeName-0"/>
 <string val="generic/" name="nodePath-0"/>
 <uint val="2" name="nodeId-0"/>
 <uint val="0" name="nodeGraphId-0"/>
 <uint val="1" name="nbInputs-0"/>
 <uint val="1" name="nbOutputs-0"/>
 <vector2f name="nodePos-0">
  <float val="1476.39" name="0"/>
  <float val="0.563832" name="1"/>
 </vector2f>
 <bool val="0" name="nodeGrouped-0"/>
 <bool val="1" name="nodeHasWidget-0"/>
 <IOData name="node-0">
  <string val="hsvImg" name="genericIName-0"/>
  <string val="RGBSpace" name="genericOName-0"/>
  <vector2f name="genericTSize">
   <float val="1" name="0"/>
   <float val="1" name="1"/>
  </vector2f>
  <vector2f name="genericTOffset">
   <float val="0" name="0"/>
   <float val="0" name="1"/>
  </vector2f>
  <bool val="0" name="genericNeedMouse"/>
  <uint val="0" name="genericNbSliderFloat"/>
  <uint val="0" name="genericNbSliderInt"/>
  <string val="#version 330&#xa;&#xa;in vec2 texcoord;&#xa;&#xa;layout(location = 0) out vec4 RGBSpace;&#xa;uniform sampler2D hsvImg;&#xa;" name="genericHead"/>
  <string val="vec3 hsvToRgb(in float h,in float s,in float v) {&#xa;  vec3 rgb;&#xa;  int hi = int(floor(h/60.0))%6;&#xa;  float f = h/60.0 - floor(h/60.0);&#xa;  float p = v*(1.0-s);&#xa;  float q = v*(1.0-f*s);&#xa;  float t = v*(1.0-(1.0-f)*s);&#xa;  &#xa;  if(hi==0) rgb = vec3(v,t,p);&#xa;  else if(hi==1) rgb = vec3(q,v,p);&#xa;  else if(hi==2) rgb = vec3(p,v,t);&#xa;  else if(hi==3) rgb = vec3(p,q,v);&#xa;  else if(hi==4) rgb = vec3(t,p,v);&#xa;  else rgb = vec3(v,p,q);&#xa;  &#xa;  return rgb;&#xa;}&#xa;&#xa;&#xa;void main() {&#xa;&#x9;vec4 color = texture(hsvImg,texcoord);&#xa;&#x9;RGBSpace = vec4(hsvToRgb(color.x,color.y,color.z),color.w);&#xa;}&#xa;" name="genericBody"/>
 </IOData>
 <IOData name="nodeWidget-0">
  <uint val="0" name="nbChildren"/>
 </IOData>
 <vector2f name="nodeInputPos-0-0">
  <float val="56.32" name="0"/>
  <float val="28.16" name="1"/>
 </vector2f>
 <vector2f name="nodeOutputPos-0-0">
  <float val="56.32" name="0"/>
  <float val="28.16" name="1"/>
 </vector2f>
</gratin>
