<gratin file="customNode">
 <string val="LAlphaBetaToRGB" name="customHandleName"/>
 <string val="filters/colorConv/" name="customHandlePath"/>
 <string val="LAlphaBeta to RGB" name="customHandleDesc"/>
 <string val="convert LAlphaBeta colors into the RGB color space" name="customHandleHelp"/>
 <int val="1" name="customHandleInputDescSize"/>
 <int val="1" name="customHandleOutputDescSize"/>
 <string val="inBuffer0" name="customHandleInputDesc-0"/>
 <string val="rgba" name="customHandleOutputDesc-0"/>
 <string val="imgGeneric" name="origHandleName"/>
 <string val="generic/" name="origHandlePath"/>
 <string val="Generic node for image processing" name="origHandleDesc"/>
 <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node beacause these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="origHandleHelp"/>
 <int val="1" name="origHandleInputDescSize"/>
 <int val="1" name="origHandleOutputDescSize"/>
 <string val="inBuffer0" name="origHandleInputDesc-0"/>
 <string val="rgba" name="origHandleOutputDesc-0"/>
 <string val="imgGeneric" name="nodeName-0"/>
 <string val="generic/" name="nodePath-0"/>
 <uint val="9" name="nodeId-0"/>
 <uint val="0" name="nodeGraphId-0"/>
 <uint val="1" name="nbInputs-0"/>
 <uint val="1" name="nbOutputs-0"/>
 <vector2f name="nodePos-0">
  <float val="2743.53" name="0"/>
  <float val="-2692.69" name="1"/>
 </vector2f>
 <bool val="0" name="nodeGrouped-0"/>
 <bool val="1" name="nodeHasWidget-0"/>
 <IOData name="node-0">
  <string val="inBuffer0" name="genericIName-0"/>
  <string val="rgba" name="genericOName-0"/>
  <vector2f name="genericTSize">
   <float val="1" name="0"/>
   <float val="1" name="1"/>
  </vector2f>
  <vector2f name="genericTOffset">
   <float val="0" name="0"/>
   <float val="0" name="1"/>
  </vector2f>
  <bool val="0" name="genericNeedMouse"/>
  <uint val="0" name="genericNbSliderFloat"/>
  <uint val="0" name="genericNbSliderInt"/>
  <string val="#version 330&#xa;&#xa;in vec2 texcoord;&#xa;&#xa;layout(location = 0) out vec4 rgba;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericHead"/>
  <string val="float rescale(in float x) {&#xa;  const float eps = 0.00001;&#xa;  return exp(x)-eps;&#xa;}&#xa;&#xa;void main() {&#xa;  vec4 laba = texture(inBuffer0,texcoord);&#xa;  vec3 lms,rgb;&#xa;&#xa;  float i1 = sqrt(3.0)/3.0;&#xa;  float i2 = sqrt(6.0)/6.0;&#xa;  float i3 = sqrt(2.0)/2.0;&#xa;&#xa;  lms.x = rescale(i1*laba.x+i2*laba.y+i3*laba.z);&#xa;  lms.y = rescale(i1*laba.x+i2*laba.y-i3*laba.z);&#xa;  lms.z = rescale(i1*laba.x-2.0*i2*laba.y);&#xa;&#xa;  rgb.x = 4.4679*lms.x-3.5873*lms.y+0.1193*lms.z;&#xa;  rgb.y = -1.2186*lms.x+2.3809*lms.y-0.1624*lms.z;&#xa;  rgb.z = 0.0497*lms.x-0.2439*lms.y+1.2045*lms.z;&#xa;&#xa;  rgba = vec4(rgb,laba.w);&#xa;}" name="genericBody"/>
 </IOData>
 <IOData name="nodeWidget-0">
  <uint val="0" name="nbChildren"/>
 </IOData>
 <vector2f name="nodeInputPos-0-0">
  <float val="150" name="0"/>
  <float val="-181" name="1"/>
 </vector2f>
 <vector2f name="nodeOutputPos-0-0">
  <float val="98.5004" name="0"/>
  <float val="-157.936" name="1"/>
 </vector2f>
</gratin>
