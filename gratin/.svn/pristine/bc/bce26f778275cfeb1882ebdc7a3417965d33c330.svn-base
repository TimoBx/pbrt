<Gratin type="node">
 <int val="0" name="majorVersion"/>
 <int val="2" name="minorVersion"/>
 <string val="_GRATIN_GROUPED_NODES_ID_" name="coreHandleStringId"/>
 <uint val="1" name="coreHandleVersion"/>
 <string val="_GRATIN_GROUPED_NODES_ID_" name="nodeStringId-0"/>
 <uint val="1" name="nodeVersion-0"/>
 <string val="histogram" name="nodeName-0"/>
 <string val="visualization/" name="nodePath-0"/>
 <string val="A simple histogram node" name="nodeDesc-0"/>
 <string val="Use this node to visualize the histogram of a buffer.&#xa;Use the parameter denominator in the last node to zoom in and out." name="nodeHelp-0"/>
 <uint val="24" name="nodeId-0"/>
 <uint val="6" name="nodeGraphId-0"/>
 <vector2f name="nodePos-0">
  <float val="-859.372" name="0"/>
  <float val="-8595.85" name="1"/>
 </vector2f>
 <int val="1" name="nodeInputNameSize-0"/>
 <int val="1" name="nodeOutputNameSize-0"/>
 <string val="inBuffer0" name="nodeInputName-0-0"/>
 <string val="histogram" name="nodeOutputName-0-0"/>
 <bool val="1" name="nodeHasWidget-0"/>
 <IOData name="node-0">
  <uint val="5" name="nbNodes"/>
  <string val="imgGenericId" name="nodeStringId-0"/>
  <uint val="1" name="nodeVersion-0"/>
  <string val="imgGeneric" name="nodeName-0"/>
  <string val="generic/" name="nodePath-0"/>
  <string val="Generic node for image processing" name="nodeDesc-0"/>
  <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-0"/>
  <uint val="0" name="nodeId-0"/>
  <uint val="0" name="nodeGraphId-0"/>
  <vector2f name="nodePos-0">
   <float val="-891.656" name="0"/>
   <float val="2.51953" name="1"/>
  </vector2f>
  <int val="1" name="nodeInputNameSize-0"/>
  <int val="1" name="nodeOutputNameSize-0"/>
  <string val="inBuffer0" name="nodeInputName-0-0"/>
  <string val="outBuffer0" name="nodeOutputName-0-0"/>
  <string val="imgSpritesGenericId" name="nodeStringId-1"/>
  <uint val="1" name="nodeVersion-1"/>
  <string val="blueMapping" name="nodeName-1"/>
  <string val="generic/" name="nodePath-1"/>
  <string val="Generic node for image sprites processing" name="nodeDesc-1"/>
  <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-1"/>
  <uint val="1" name="nodeId-1"/>
  <uint val="0" name="nodeGraphId-1"/>
  <vector2f name="nodePos-1">
   <float val="10.7311" name="0"/>
   <float val="-766.641" name="1"/>
  </vector2f>
  <int val="1" name="nodeInputNameSize-1"/>
  <int val="1" name="nodeOutputNameSize-1"/>
  <string val="img" name="nodeInputName-1-0"/>
  <string val="blueBuffer" name="nodeOutputName-1-0"/>
  <string val="imgSpritesGenericId" name="nodeStringId-2"/>
  <uint val="1" name="nodeVersion-2"/>
  <string val="greenMapping" name="nodeName-2"/>
  <string val="generic/" name="nodePath-2"/>
  <string val="Generic node for image sprites processing" name="nodeDesc-2"/>
  <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-2"/>
  <uint val="2" name="nodeId-2"/>
  <uint val="0" name="nodeGraphId-2"/>
  <vector2f name="nodePos-2">
   <float val="4.73657" name="0"/>
   <float val="-2.88672" name="1"/>
  </vector2f>
  <int val="1" name="nodeInputNameSize-2"/>
  <int val="1" name="nodeOutputNameSize-2"/>
  <string val="img" name="nodeInputName-2-0"/>
  <string val="greenBuffer" name="nodeOutputName-2-0"/>
  <string val="imgSpritesGenericId" name="nodeStringId-3"/>
  <uint val="1" name="nodeVersion-3"/>
  <string val="redMapping" name="nodeName-3"/>
  <string val="generic/" name="nodePath-3"/>
  <string val="Generic node for image sprites processing" name="nodeDesc-3"/>
  <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-3"/>
  <uint val="3" name="nodeId-3"/>
  <uint val="0" name="nodeGraphId-3"/>
  <vector2f name="nodePos-3">
   <float val="0.665527" name="0"/>
   <float val="764.718" name="1"/>
  </vector2f>
  <int val="1" name="nodeInputNameSize-3"/>
  <int val="1" name="nodeOutputNameSize-3"/>
  <string val="img" name="nodeInputName-3-0"/>
  <string val="redBuffer" name="nodeOutputName-3-0"/>
  <string val="imgGenericId" name="nodeStringId-4"/>
  <uint val="1" name="nodeVersion-4"/>
  <string val="histogram" name="nodeName-4"/>
  <string val="generic/" name="nodePath-4"/>
  <string val="Generic node for image processing" name="nodeDesc-4"/>
  <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="nodeHelp-4"/>
  <uint val="4" name="nodeId-4"/>
  <uint val="0" name="nodeGraphId-4"/>
  <vector2f name="nodePos-4">
   <float val="875.523" name="0"/>
   <float val="2.29004" name="1"/>
  </vector2f>
  <int val="3" name="nodeInputNameSize-4"/>
  <int val="1" name="nodeOutputNameSize-4"/>
  <string val="redBuffer" name="nodeInputName-4-0"/>
  <string val="greenBuffer" name="nodeInputName-4-1"/>
  <string val="blueBuffer" name="nodeInputName-4-2"/>
  <string val="histogram" name="nodeOutputName-4-0"/>
  <uint val="1" name="nbConnections-0-1"/>
  <vector2u name="connection-0-1-0">
   <uint val="0" name="0"/>
   <uint val="0" name="1"/>
  </vector2u>
  <uint val="1" name="nbConnections-0-2"/>
  <vector2u name="connection-0-2-0">
   <uint val="0" name="0"/>
   <uint val="0" name="1"/>
  </vector2u>
  <uint val="1" name="nbConnections-0-3"/>
  <vector2u name="connection-0-3-0">
   <uint val="0" name="0"/>
   <uint val="0" name="1"/>
  </vector2u>
  <uint val="0" name="nbConnections-0-4"/>
  <uint val="0" name="nbConnections-1-2"/>
  <uint val="0" name="nbConnections-1-3"/>
  <uint val="1" name="nbConnections-1-4"/>
  <vector2u name="connection-1-4-0">
   <uint val="0" name="0"/>
   <uint val="2" name="1"/>
  </vector2u>
  <uint val="0" name="nbConnections-2-3"/>
  <uint val="1" name="nbConnections-2-4"/>
  <vector2u name="connection-2-4-0">
   <uint val="0" name="0"/>
   <uint val="1" name="1"/>
  </vector2u>
  <uint val="1" name="nbConnections-3-4"/>
  <vector2u name="connection-3-4-0">
   <uint val="0" name="0"/>
   <uint val="0" name="1"/>
  </vector2u>
  <bool val="1" name="nodeHasWidget-0"/>
  <IOData name="node-0">
   <string val="420" name="genericGlslVersion"/>
   <string val="imgGeneric" name="genericNodeName"/>
   <bool val="0" name="genericUseVertex"/>
   <bool val="0" name="genericUseTesselation"/>
   <bool val="0" name="genericUseGeometry"/>
   <bool val="1" name="genericUseFragment"/>
   <int val="9728" name="genericOutFilter"/>
   <int val="33071" name="genericOutWrap"/>
   <bool val="0" name="genericUseDepthTest"/>
   <bool val="0" name="genericUseBlending"/>
   <uint val="513" name="genericDepthFunc"/>
   <uint val="1" name="genericBlendSrc"/>
   <uint val="0" name="genericBlendDst"/>
   <vector4f name="genericBackground">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
    <float val="0" name="2"/>
    <float val="0" name="3"/>
   </vector4f>
   <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericVertHead"/>
   <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
   <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericFragHead"/>
   <string val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;outBuffer0 = texture(inBuffer0,texcoord);&#xa;}&#xa;" name="genericFragBody"/>
   <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessCHead"/>
   <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
   <string val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericTessEHead"/>
   <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
   <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;" name="genericGeomHead"/>
   <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
   <vector2f name="genericTSize">
    <float val="1" name="0"/>
    <float val="1" name="1"/>
   </vector2f>
   <vector2f name="genericTOffset">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
   </vector2f>
   <bool val="0" name="genericNeedMouse"/>
   <bool val="0" name="genericNeedKeyboard"/>
   <uint val="0" name="genericNbWidgets"/>
  </IOData>
  <IOData name="nodeWidget-0">
   <uint val="0" name="nbChildren"/>
  </IOData>
  <vector2f name="nodeInputPos-0-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <vector2f name="nodeOutputPos-0-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <bool val="1" name="nodeHasWidget-1"/>
  <IOData name="node-1">
   <string val="420" name="genericGlslVersion"/>
   <string val="blueMapping" name="genericNodeName"/>
   <bool val="1" name="genericUseVertex"/>
   <bool val="0" name="genericUseTesselation"/>
   <bool val="0" name="genericUseGeometry"/>
   <bool val="1" name="genericUseFragment"/>
   <int val="9728" name="genericOutFilter"/>
   <int val="33071" name="genericOutWrap"/>
   <bool val="0" name="genericUseDepthTest"/>
   <bool val="1" name="genericUseBlending"/>
   <uint val="513" name="genericDepthFunc"/>
   <uint val="1" name="genericBlendSrc"/>
   <uint val="1" name="genericBlendDst"/>
   <vector4f name="genericBackground">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
    <float val="0" name="2"/>
    <float val="0" name="3"/>
   </vector4f>
   <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;uniform sampler2D img;&#xa;" name="genericVertHead"/>
   <string val="out vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;gl_PointSize = 1.0;&#xa;&#x9;gl_Position = vec4(texture(img,vertex*0.5+vec2(0.5)).z*2.0-1.0,0,0,1);&#xa;&#x9;color = vec4(1);&#xa;}&#xa;" name="genericVertBody"/>
   <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 blueBuffer;&#xa;uniform sampler2D img;&#xa;" name="genericFragHead"/>
   <string val="in vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;blueBuffer = color;&#xa;}&#xa;" name="genericFragBody"/>
   <string val="#version 420&#xa;&#xa;layout(vertices = 1) out;&#xa;uniform sampler2D img;&#xa;" name="genericTessCHead"/>
   <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
   <string val="#version 420&#xa;&#xa;uniform sampler2D img;&#xa;" name="genericTessEHead"/>
   <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;}&#xa;" name="genericTessEBody"/>
   <string val="#version 420&#xa;&#xa;layout(points) in;&#xa;uniform sampler2D img;&#xa;" name="genericGeomHead"/>
   <string val="layout(points, max_vertices = 1) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;&#x9;EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
   <vector2f name="genericTSize">
    <float val="1" name="0"/>
    <float val="1" name="1"/>
   </vector2f>
   <vector2f name="genericTOffset">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
   </vector2f>
   <bool val="0" name="genericNeedMouse"/>
   <bool val="0" name="genericNeedKeyboard"/>
   <uint val="0" name="genericNbWidgets"/>
  </IOData>
  <IOData name="nodeWidget-1">
   <uint val="0" name="nbChildren"/>
  </IOData>
  <vector2f name="nodeInputPos-1-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <vector2f name="nodeOutputPos-1-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <bool val="1" name="nodeHasWidget-2"/>
  <IOData name="node-2">
   <string val="420" name="genericGlslVersion"/>
   <string val="greenMapping" name="genericNodeName"/>
   <bool val="1" name="genericUseVertex"/>
   <bool val="0" name="genericUseTesselation"/>
   <bool val="0" name="genericUseGeometry"/>
   <bool val="1" name="genericUseFragment"/>
   <int val="9728" name="genericOutFilter"/>
   <int val="33071" name="genericOutWrap"/>
   <bool val="0" name="genericUseDepthTest"/>
   <bool val="1" name="genericUseBlending"/>
   <uint val="513" name="genericDepthFunc"/>
   <uint val="1" name="genericBlendSrc"/>
   <uint val="1" name="genericBlendDst"/>
   <vector4f name="genericBackground">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
    <float val="0" name="2"/>
    <float val="0" name="3"/>
   </vector4f>
   <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;uniform sampler2D img;&#xa;" name="genericVertHead"/>
   <string val="out vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;gl_PointSize = 1.0;&#xa;&#x9;gl_Position = vec4(texture(img,vertex*0.5+vec2(0.5)).y*2.0-1.0,0,0,1);&#xa;&#x9;color = vec4(1);&#xa;}&#xa;" name="genericVertBody"/>
   <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 greenBuffer;&#xa;uniform sampler2D img;&#xa;" name="genericFragHead"/>
   <string val="in vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;greenBuffer = color;&#xa;}&#xa;" name="genericFragBody"/>
   <string val="#version 420&#xa;&#xa;layout(vertices = 1) out;&#xa;uniform sampler2D img;&#xa;" name="genericTessCHead"/>
   <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
   <string val="#version 420&#xa;&#xa;uniform sampler2D img;&#xa;" name="genericTessEHead"/>
   <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;}&#xa;" name="genericTessEBody"/>
   <string val="#version 420&#xa;&#xa;layout(points) in;&#xa;uniform sampler2D img;&#xa;" name="genericGeomHead"/>
   <string val="layout(points, max_vertices = 1) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;&#x9;EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
   <vector2f name="genericTSize">
    <float val="1" name="0"/>
    <float val="1" name="1"/>
   </vector2f>
   <vector2f name="genericTOffset">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
   </vector2f>
   <bool val="0" name="genericNeedMouse"/>
   <bool val="0" name="genericNeedKeyboard"/>
   <uint val="0" name="genericNbWidgets"/>
  </IOData>
  <IOData name="nodeWidget-2">
   <uint val="0" name="nbChildren"/>
  </IOData>
  <vector2f name="nodeInputPos-2-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <vector2f name="nodeOutputPos-2-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <bool val="1" name="nodeHasWidget-3"/>
  <IOData name="node-3">
   <string val="420" name="genericGlslVersion"/>
   <string val="redMapping" name="genericNodeName"/>
   <bool val="1" name="genericUseVertex"/>
   <bool val="0" name="genericUseTesselation"/>
   <bool val="0" name="genericUseGeometry"/>
   <bool val="1" name="genericUseFragment"/>
   <int val="9728" name="genericOutFilter"/>
   <int val="33071" name="genericOutWrap"/>
   <bool val="0" name="genericUseDepthTest"/>
   <bool val="1" name="genericUseBlending"/>
   <uint val="513" name="genericDepthFunc"/>
   <uint val="1" name="genericBlendSrc"/>
   <uint val="1" name="genericBlendDst"/>
   <vector4f name="genericBackground">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
    <float val="0" name="2"/>
    <float val="0" name="3"/>
   </vector4f>
   <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;uniform sampler2D img;&#xa;" name="genericVertHead"/>
   <string val="out vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;gl_PointSize = 1.0;&#xa;&#x9;gl_Position = vec4(texture(img,vertex*0.5+vec2(0.5)).x*2.0-1.0,0,0,1);&#xa;&#x9;color = vec4(1);&#xa;}&#xa;" name="genericVertBody"/>
   <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 redBuffer;&#xa;uniform sampler2D img;&#xa;" name="genericFragHead"/>
   <string val="in vec4 color;&#xa;&#xa;void main() {&#xa;&#x9;redBuffer = color;&#xa;}&#xa;" name="genericFragBody"/>
   <string val="#version 420&#xa;&#xa;layout(vertices = 1) out;&#xa;uniform sampler2D img;&#xa;" name="genericTessCHead"/>
   <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
   <string val="#version 420&#xa;&#xa;uniform sampler2D img;&#xa;" name="genericTessEHead"/>
   <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;}&#xa;" name="genericTessEBody"/>
   <string val="#version 420&#xa;&#xa;layout(points) in;&#xa;uniform sampler2D img;&#xa;" name="genericGeomHead"/>
   <string val="layout(points, max_vertices = 1) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position;&#xa;&#x9;EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
   <vector2f name="genericTSize">
    <float val="1" name="0"/>
    <float val="1" name="1"/>
   </vector2f>
   <vector2f name="genericTOffset">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
   </vector2f>
   <bool val="0" name="genericNeedMouse"/>
   <bool val="0" name="genericNeedKeyboard"/>
   <uint val="0" name="genericNbWidgets"/>
  </IOData>
  <IOData name="nodeWidget-3">
   <uint val="0" name="nbChildren"/>
  </IOData>
  <vector2f name="nodeInputPos-3-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <vector2f name="nodeOutputPos-3-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <bool val="1" name="nodeHasWidget-4"/>
  <IOData name="node-4">
   <string val="420" name="genericGlslVersion"/>
   <string val="histogram" name="genericNodeName"/>
   <bool val="0" name="genericUseVertex"/>
   <bool val="0" name="genericUseTesselation"/>
   <bool val="0" name="genericUseGeometry"/>
   <bool val="1" name="genericUseFragment"/>
   <int val="9729" name="genericOutFilter"/>
   <int val="33071" name="genericOutWrap"/>
   <bool val="0" name="genericUseDepthTest"/>
   <bool val="0" name="genericUseBlending"/>
   <uint val="513" name="genericDepthFunc"/>
   <uint val="1" name="genericBlendSrc"/>
   <uint val="0" name="genericBlendDst"/>
   <vector4f name="genericBackground">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
    <float val="0" name="2"/>
    <float val="0" name="3"/>
   </vector4f>
   <string val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D redBuffer;&#xa;uniform sampler2D greenBuffer;&#xa;uniform sampler2D blueBuffer;&#xa;uniform float denominator;&#xa;" name="genericVertHead"/>
   <string val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;" name="genericVertBody"/>
   <string val="#version 420&#xa;&#xa;layout(location = 0) out vec4 histogram;&#xa;uniform sampler2D redBuffer;&#xa;uniform sampler2D greenBuffer;&#xa;uniform sampler2D blueBuffer;&#xa;uniform float denominator;&#xa;" name="genericFragHead"/>
   <string val="in vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;float r = texture(redBuffer,vec2(texcoord.x,0.5 - 0.5/textureSize(redBuffer,0))).x/denominator;&#xa;&#x9;float g = texture(greenBuffer,vec2(texcoord.x,0.5 - 0.5/textureSize(greenBuffer,0))).x/denominator;&#xa;&#x9;float b = texture(blueBuffer,vec2(texcoord.x,0.5 - 0.5/textureSize(blueBuffer,0))).x/denominator;&#xa;&#x9;vec4 color = vec4(0,0,0,1);&#xa;&#x9;if(r > texcoord.y)&#xa;&#x9;&#x9;color.x = 1;&#xa;&#x9;if(g > texcoord.y)&#xa;&#x9;&#x9;color.y = 1;&#xa;&#x9;if(b > texcoord.y)&#xa;&#x9;&#x9;color.z = 1;&#xa;&#x9;histogram = color;&#xa;}&#xa;" name="genericFragBody"/>
   <string val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D redBuffer;&#xa;uniform sampler2D greenBuffer;&#xa;uniform sampler2D blueBuffer;&#xa;uniform float denominator;&#xa;" name="genericTessCHead"/>
   <string val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;" name="genericTessCBody"/>
   <string val="#version 420&#xa;&#xa;uniform sampler2D redBuffer;&#xa;uniform sampler2D greenBuffer;&#xa;uniform sampler2D blueBuffer;&#xa;uniform float denominator;&#xa;" name="genericTessEHead"/>
   <string val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;" name="genericTessEBody"/>
   <string val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D redBuffer;&#xa;uniform sampler2D greenBuffer;&#xa;uniform sampler2D blueBuffer;&#xa;uniform float denominator;&#xa;" name="genericGeomHead"/>
   <string val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}" name="genericGeomBody"/>
   <vector2f name="genericTSize">
    <float val="0" name="0"/>
    <float val="0" name="1"/>
   </vector2f>
   <vector2f name="genericTOffset">
    <float val="512" name="0"/>
    <float val="512" name="1"/>
   </vector2f>
   <bool val="0" name="genericNeedMouse"/>
   <bool val="0" name="genericNeedKeyboard"/>
   <uint val="1" name="genericNbWidgets"/>
   <int val="0" name="genericWidgetType-0"/>
   <int val="1" name="genericWidgetView-0"/>
   <string val="denominator" name="genericWidgetName-0"/>
   <bool val="0" name="genericWidgetKeyframed-0"/>
  </IOData>
  <IOData name="nodeWidget-4">
   <uint val="1" name="nbChildren"/>
   <IOData name="childWidget-0">
    <bool val="0" name="floatAttribKeyframed"/>
    <float val="1" name="floatAttribMinVal"/>
    <float val="2000" name="floatAttribMaxVal"/>
    <IOData name="floatAttribCurve">
     <float val="500" name="currentVal"/>
     <uint val="1" name="nbCurves"/>
     <IOData name="curve-0">
      <int val="0" name="interpType"/>
      <int val="0" name="leftType"/>
      <int val="0" name="rightType"/>
      <IOData name="interpolator">
       <uint val="1" name="nbPoints"/>
       <uint val="0" name="nbTangents"/>
       <vector2f name="controlPoint-0">
        <float val="0" name="0"/>
        <float val="500" name="1"/>
       </vector2f>
      </IOData>
     </IOData>
    </IOData>
    <uint val="0" name="nbChildren"/>
   </IOData>
  </IOData>
  <vector2f name="nodeInputPos-4-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <vector2f name="nodeInputPos-4-1">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <vector2f name="nodeInputPos-4-2">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
  <vector2f name="nodeOutputPos-4-0">
   <float val="56.32" name="0"/>
   <float val="28.16" name="1"/>
  </vector2f>
 </IOData>
 <IOData name="nodeWidget-0">
  <uint val="5" name="nbChildren"/>
  <IOData name="childWidget-0">
   <uint val="0" name="nbChildren"/>
  </IOData>
  <IOData name="childWidget-1">
   <uint val="0" name="nbChildren"/>
  </IOData>
  <IOData name="childWidget-2">
   <uint val="0" name="nbChildren"/>
  </IOData>
  <IOData name="childWidget-3">
   <uint val="0" name="nbChildren"/>
  </IOData>
  <IOData name="childWidget-4">
   <uint val="1" name="nbChildren"/>
   <IOData name="childWidget-0">
    <bool val="0" name="floatAttribKeyframed"/>
    <float val="1" name="floatAttribMinVal"/>
    <float val="2000" name="floatAttribMaxVal"/>
    <IOData name="floatAttribCurve">
     <float val="500" name="currentVal"/>
     <uint val="1" name="nbCurves"/>
     <IOData name="curve-0">
      <int val="0" name="interpType"/>
      <int val="0" name="leftType"/>
      <int val="0" name="rightType"/>
      <IOData name="interpolator">
       <uint val="1" name="nbPoints"/>
       <uint val="0" name="nbTangents"/>
       <vector2f name="controlPoint-0">
        <float val="0" name="0"/>
        <float val="500" name="1"/>
       </vector2f>
      </IOData>
     </IOData>
    </IOData>
    <uint val="0" name="nbChildren"/>
   </IOData>
  </IOData>
 </IOData>
 <vector2f name="nodeInputPos-0-0">
  <float val="56.32" name="0"/>
  <float val="28.16" name="1"/>
 </vector2f>
 <vector2f name="nodeOutputPos-0-0">
  <float val="56.32" name="0"/>
  <float val="28.16" name="1"/>
 </vector2f>
</Gratin>
