<gratin file="customNode">
 <string val="litSphere" name="customHandleName"/>
 <string val="rendering/" name="customHandlePath"/>
 <string val="Lit Sphere rendering [Sloan et al., 2001]" name="customHandleDesc"/>
 <string val="Lit Sphere rendering. &lt;br>&#xa;From the paper: The Lit Sphere: A Model for Capturing NPR Shading from Art [Sloan et al. 2001]&lt;br>&lt;br>&#xa;Input 1: normal map&lt;br>&#xa;Input 2: shaded sphere" name="customHandleHelp"/>
 <int val="2" name="customHandleInputDescSize"/>
 <int val="1" name="customHandleOutputDescSize"/>
 <string val="normalMap" name="customHandleInputDesc-0"/>
 <string val="colorMap" name="customHandleInputDesc-1"/>
 <string val="litSphere" name="customHandleOutputDesc-0"/>
 <string val="imgGeneric" name="origHandleName"/>
 <string val="generic/" name="origHandlePath"/>
 <string val="Generic node for image processing" name="origHandleDesc"/>
 <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node beacause these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="origHandleHelp"/>
 <int val="2" name="origHandleInputDescSize"/>
 <int val="1" name="origHandleOutputDescSize"/>
 <string val="normalMap" name="origHandleInputDesc-0"/>
 <string val="colorMap" name="origHandleInputDesc-1"/>
 <string val="litSphere" name="origHandleOutputDesc-0"/>
 <string val="imgGeneric" name="nodeName-0"/>
 <string val="generic/" name="nodePath-0"/>
 <uint val="35" name="nodeId-0"/>
 <uint val="0" name="nodeGraphId-0"/>
 <uint val="2" name="nbInputs-0"/>
 <uint val="1" name="nbOutputs-0"/>
 <vector2f name="nodePos-0">
  <float val="5682.05" name="0"/>
  <float val="-4090.8" name="1"/>
 </vector2f>
 <bool val="0" name="nodeGrouped-0"/>
 <bool val="1" name="nodeHasWidget-0"/>
 <IOData name="node-0">
  <string val="normalMap" name="genericIName-0"/>
  <string val="colorMap" name="genericIName-1"/>
  <string val="litSphere" name="genericOName-0"/>
  <vector2f name="genericTSize">
   <float val="1" name="0"/>
   <float val="1" name="1"/>
  </vector2f>
  <vector2f name="genericTOffset">
   <float val="0" name="0"/>
   <float val="0" name="1"/>
  </vector2f>
  <bool val="0" name="genericNeedMouse"/>
  <uint val="0" name="genericNbSliderFloat"/>
  <uint val="0" name="genericNbSliderInt"/>
  <string val="#version 330&#xa;&#xa;in vec2 texcoord;&#xa;&#xa;layout(location = 0) out vec4 litSphere;&#xa;uniform sampler2D normalMap;&#xa;uniform sampler2D colorMap;&#xa;" name="genericHead"/>
  <string val="void main() {&#xa;&#x9;vec4 data = texture(normalMap,texcoord);&#xa;&#xa;&#x9;if(data.xyz==vec3(0)) {&#xa;&#x9;&#x9;litSphere = vec4(0);&#xa;&#x9;} else {&#xa;&#x9;&#x9;litSphere = texture(colorMap,data.xy*0.5+vec2(0.5));&#xa;&#x9;}&#xa;}&#xa;&#xa;" name="genericBody"/>
 </IOData>
 <IOData name="nodeWidget-0">
  <uint val="0" name="nbChildren"/>
 </IOData>
 <vector2f name="nodeInputPos-0-0">
  <float val="150" name="0"/>
  <float val="-181" name="1"/>
 </vector2f>
 <vector2f name="nodeInputPos-0-1">
  <float val="150" name="0"/>
  <float val="-181" name="1"/>
 </vector2f>
 <vector2f name="nodeOutputPos-0-0">
  <float val="150" name="0"/>
  <float val="-181" name="1"/>
 </vector2f>
</gratin>
