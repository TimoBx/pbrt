<Gratin type="node">
 <int name="majorVersion" val="0"/>
 <int name="minorVersion" val="3"/>
 <string name="coreHandleStringId" val="_GRATIN_GROUPED_NODES_ID_"/>
 <uint name="coreHandleVersion" val="1"/>
 <string name="nodeStringId-0" val="_GRATIN_GROUPED_NODES_ID_"/>
 <uint name="nodeVersion-0" val="1"/>
 <string name="nodeName-0" val="display3MeanColors"/>
 <string name="nodePath-0" val="Custom/"/>
 <string name="nodeDesc-0" val="Displays the mean colors in the 3 imp maps, in a previously defined area."/>
 <string name="nodeHelp-0" val="Displays the mean colors in the 3 imp maps, in a previously defined area."/>
 <uint name="nodeId-0" val="13"/>
 <uint name="nodeGraphId-0" val="0"/>
 <vector2f name="nodePos-0">
  <float name="0" val="7072.52"/>
  <float name="1" val="-138.895"/>
 </vector2f>
 <int name="nodeInputNameSize-0" val="4"/>
 <int name="nodeOutputNameSize-0" val="1"/>
 <string name="nodeInputName-0-0" val="inBuffer0"/>
 <string name="nodeInputName-0-1" val="inBuffer1"/>
 <string name="nodeInputName-0-2" val="inBuffer2"/>
 <string name="nodeInputName-0-3" val="inBuffer3"/>
 <string name="nodeOutputName-0-0" val="outBuffer0"/>
 <bool name="nodeHasWidget-0" val="1"/>
 <IOData name="node-0">
  <uint name="nbNodes" val="2"/>
  <string name="nodeStringId-0" val="imgGenericId"/>
  <uint name="nodeVersion-0" val="1"/>
  <string name="nodeName-0" val="genericImage"/>
  <string name="nodePath-0" val="Generic/"/>
  <string name="nodeDesc-0" val="Generic node for image processing"/>
  <string name="nodeHelp-0" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
  <uint name="nodeId-0" val="0"/>
  <uint name="nodeGraphId-0" val="0"/>
  <vector2f name="nodePos-0">
   <float name="0" val="-1040.37"/>
   <float name="1" val="22.8364"/>
  </vector2f>
  <int name="nodeInputNameSize-0" val="4"/>
  <int name="nodeOutputNameSize-0" val="3"/>
  <string name="nodeInputName-0-0" val="inBuffer0"/>
  <string name="nodeInputName-0-1" val="inBuffer1"/>
  <string name="nodeInputName-0-2" val="inBuffer2"/>
  <string name="nodeInputName-0-3" val="inBuffer3"/>
  <string name="nodeOutputName-0-0" val="outBuffer0"/>
  <string name="nodeOutputName-0-1" val="outBuffer1"/>
  <string name="nodeOutputName-0-2" val="outBuffer2"/>
  <string name="nodeStringId-1" val="imgGenericId"/>
  <uint name="nodeVersion-1" val="1"/>
  <string name="nodeName-1" val="genericImage"/>
  <string name="nodePath-1" val="Generic/"/>
  <string name="nodeDesc-1" val="Generic node for image processing"/>
  <string name="nodeHelp-1" val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node because these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse/keyboard if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;"/>
  <uint name="nodeId-1" val="1"/>
  <uint name="nodeGraphId-1" val="0"/>
  <vector2f name="nodePos-1">
   <float name="0" val="1040.37"/>
   <float name="1" val="-22.8364"/>
  </vector2f>
  <int name="nodeInputNameSize-1" val="3"/>
  <int name="nodeOutputNameSize-1" val="1"/>
  <string name="nodeInputName-1-0" val="inBuffer0"/>
  <string name="nodeInputName-1-1" val="inBuffer1"/>
  <string name="nodeInputName-1-2" val="inBuffer2"/>
  <string name="nodeOutputName-1-0" val="outBuffer0"/>
  <uint name="nbConnections-0-1" val="3"/>
  <vector2u name="connection-0-1-0">
   <uint name="0" val="2"/>
   <uint name="1" val="2"/>
  </vector2u>
  <vector2u name="connection-0-1-1">
   <uint name="0" val="1"/>
   <uint name="1" val="1"/>
  </vector2u>
  <vector2u name="connection-0-1-2">
   <uint name="0" val="0"/>
   <uint name="1" val="0"/>
  </vector2u>
  <bool name="nodeHasWidget-0" val="1"/>
  <IOData name="node-0">
   <string name="genericGlslVersion" val="420"/>
   <string name="genericNodeName" val="genericImage"/>
   <bool name="genericUseVertex" val="0"/>
   <bool name="genericUseTesselation" val="0"/>
   <bool name="genericUseGeometry" val="0"/>
   <bool name="genericUseFragment" val="1"/>
   <int name="genericOutFilter" val="9729"/>
   <int name="genericOutWrap" val="33071"/>
   <bool name="genericUseDepthTest" val="0"/>
   <bool name="genericUseBlending" val="0"/>
   <uint name="genericDepthFunc" val="513"/>
   <uint name="genericBlendSrc" val="1"/>
   <uint name="genericBlendDst" val="0"/>
   <vector4f name="genericBackground">
    <float name="0" val="0"/>
    <float name="1" val="0"/>
    <float name="2" val="0"/>
    <float name="3" val="0"/>
   </vector4f>
   <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;uniform sampler2D inBuffer3;&#xa;uniform int scale;&#xa;"/>
   <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
   <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;layout(location = 1) out vec4 outBuffer1;&#xa;layout(location = 2) out vec4 outBuffer2;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;uniform sampler2D inBuffer3;&#xa;uniform int scale;&#xa;"/>
   <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#x9;vec4 maxValue = textureLod(inBuffer3,texcoord,20)/scale;&#xa;&#xa;&#x9;outBuffer0 = textureLod(inBuffer0,texcoord,20)/maxValue;&#xa;&#xa;&#x9;outBuffer1 = textureLod(inBuffer1,texcoord,20)/maxValue;&#xa;&#xa;&#x9;outBuffer2 = textureLod(inBuffer2,texcoord,20)/maxValue;&#xa;&#xa;&#xa;}&#xa;"/>
   <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;uniform sampler2D inBuffer3;&#xa;uniform int scale;&#xa;"/>
   <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
   <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;uniform sampler2D inBuffer3;&#xa;uniform int scale;&#xa;"/>
   <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
   <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;uniform sampler2D inBuffer3;&#xa;uniform int scale;&#xa;"/>
   <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
   <vector2f name="genericTSize">
    <float name="0" val="1"/>
    <float name="1" val="1"/>
   </vector2f>
   <vector2f name="genericTOffset">
    <float name="0" val="0"/>
    <float name="1" val="0"/>
   </vector2f>
   <bool name="genericNeedMouse" val="0"/>
   <bool name="genericNeedKeyboard" val="0"/>
   <uint name="genericNbWidgets" val="1"/>
   <int name="genericWidgetType-0" val="1"/>
   <int name="genericWidgetView-0" val="1"/>
   <string name="genericWidgetName-0" val="scale"/>
   <bool name="genericWidgetKeyframed-0" val="0"/>
  </IOData>
  <IOData name="nodeWidget-0">
   <uint name="nbChildren" val="1"/>
   <IOData name="childWidget-0">
    <bool name="intAttribKeyframed" val="0"/>
    <int name="intAttribMinVal" val="1"/>
    <int name="intAttribMaxVal" val="200"/>
    <IOData name="intAttribCurve">
     <int name="currentVal" val="2"/>
     <uint name="nbCurves" val="1"/>
     <IOData name="curve-0">
      <int name="interpType" val="0"/>
      <int name="leftType" val="0"/>
      <int name="rightType" val="0"/>
      <IOData name="interpolator">
       <uint name="nbPoints" val="1"/>
       <uint name="nbTangents" val="0"/>
       <vector2f name="controlPoint-0">
        <float name="0" val="0"/>
        <float name="1" val="2"/>
       </vector2f>
      </IOData>
     </IOData>
    </IOData>
    <uint name="nbChildren" val="0"/>
   </IOData>
  </IOData>
  <vector2f name="nodeInputPos-0-0">
   <float name="0" val="112.64"/>
   <float name="1" val="28.16"/>
  </vector2f>
  <vector2f name="nodeInputPos-0-1">
   <float name="0" val="112.64"/>
   <float name="1" val="28.16"/>
  </vector2f>
  <vector2f name="nodeInputPos-0-2">
   <float name="0" val="112.64"/>
   <float name="1" val="28.16"/>
  </vector2f>
  <vector2f name="nodeInputPos-0-3">
   <float name="0" val="112.64"/>
   <float name="1" val="28.16"/>
  </vector2f>
  <vector2f name="nodeOutputPos-0-0">
   <float name="0" val="112.64"/>
   <float name="1" val="1267.2"/>
  </vector2f>
  <vector2f name="nodeOutputPos-0-1">
   <float name="0" val="112.64"/>
   <float name="1" val="647.68"/>
  </vector2f>
  <vector2f name="nodeOutputPos-0-2">
   <float name="0" val="112.64"/>
   <float name="1" val="28.16"/>
  </vector2f>
  <bool name="nodeHasWidget-1" val="1"/>
  <IOData name="node-1">
   <string name="genericGlslVersion" val="420"/>
   <string name="genericNodeName" val="genericImage"/>
   <bool name="genericUseVertex" val="0"/>
   <bool name="genericUseTesselation" val="0"/>
   <bool name="genericUseGeometry" val="0"/>
   <bool name="genericUseFragment" val="1"/>
   <int name="genericOutFilter" val="9729"/>
   <int name="genericOutWrap" val="33071"/>
   <bool name="genericUseDepthTest" val="0"/>
   <bool name="genericUseBlending" val="0"/>
   <uint name="genericDepthFunc" val="513"/>
   <uint name="genericBlendSrc" val="1"/>
   <uint name="genericBlendDst" val="0"/>
   <vector4f name="genericBackground">
    <float name="0" val="0"/>
    <float name="1" val="0"/>
    <float name="2" val="0"/>
    <float name="3" val="0"/>
   </vector4f>
   <string name="genericVertHead" val="#version 420&#xa;&#xa;layout(location = 0) in vec2 vertex;&#xa;layout(location = 1) in vec2 coord;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
   <string name="genericVertBody" val="out vec2 texcoord;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = vec4(vertex,0,1);&#xa;&#x9;texcoord    = coord;&#xa;}&#xa;"/>
   <string name="genericFragHead" val="#version 420&#xa;&#xa;layout(location = 0) out vec4 outBuffer0;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
   <string name="genericFragBody" val="in vec2 texcoord;&#xa;void main() {&#xa;&#xa;&#x9;vec2 dim = vec2(1200,1200);&#xa;&#xa;&#x9;vec4 c1 = texture(inBuffer0,texcoord);&#xa;&#x9;vec4 c2 = texture(inBuffer1,texcoord);&#xa;&#x9;vec4 c3 = texture(inBuffer2,texcoord);&#xa;&#x9;vec4 maxValue = vec4(1);&#xa;&#xa;&#x9;if (dim.x * texcoord.x &lt; dim.x * 1/3) {&#xa;&#x9;&#x9;outBuffer0 =c1/maxValue;&#xa;&#x9;}&#xa;&#xa;&#x9;else if (dim.x * texcoord.x >= dim.x * 2/3) {&#xa;&#x9;&#x9;outBuffer0 = c3/maxValue;&#xa;&#x9;}&#xa;&#xa;&#x9;else {&#xa;&#x9;&#x9;outBuffer0 = c2/maxValue;&#xa;&#x9;}&#xa;}&#xa;"/>
   <string name="genericTessCHead" val="#version 420&#xa;&#xa;layout(vertices = 4) out;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
   <string name="genericTessCBody" val="void main(void) {&#xa;&#x9;gl_TessLevelOuter[0] = 1;&#xa;&#x9;gl_TessLevelOuter[1] = 1;&#xa;&#x9;gl_TessLevelOuter[2] = 1;&#xa;&#x9;gl_TessLevelOuter[3] = 1;&#xa;&#x9;gl_TessLevelInner[0] = 1;&#xa;&#x9;gl_TessLevelInner[1] = 1;&#xa;&#x9;gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;&#xa;}&#xa;"/>
   <string name="genericTessEHead" val="#version 420&#xa;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
   <string name="genericTessEBody" val="layout(quads,equal_spacing) in;&#xa;&#xa;void main() {&#xa;&#x9;vec4 p1 = mix(gl_in[0].gl_Position,gl_in[1].gl_Position,gl_TessCoord.x);&#xa;&#x9;vec4 p2 = mix(gl_in[3].gl_Position,gl_in[2].gl_Position,gl_TessCoord.x);&#xa;&#x9;gl_Position = mix(p1,p2,gl_TessCoord.y);&#xa;}&#xa;"/>
   <string name="genericGeomHead" val="#version 420&#xa;&#xa;layout(triangles) in;&#xa;uniform sampler2D inBuffer0;&#xa;uniform sampler2D inBuffer1;&#xa;uniform sampler2D inBuffer2;&#xa;"/>
   <string name="genericGeomBody" val="layout(triangle_strip, max_vertices = 3) out;&#xa;&#xa;void main() {&#xa;&#x9;gl_Position = gl_in[0].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[1].gl_Position; EmitVertex();&#xa;&#x9;gl_Position = gl_in[2].gl_Position; EmitVertex();&#xa;&#x9;EndPrimitive();&#xa;}"/>
   <vector2f name="genericTSize">
    <float name="0" val="0"/>
    <float name="1" val="0"/>
   </vector2f>
   <vector2f name="genericTOffset">
    <float name="0" val="1200"/>
    <float name="1" val="1200"/>
   </vector2f>
   <bool name="genericNeedMouse" val="0"/>
   <bool name="genericNeedKeyboard" val="0"/>
   <uint name="genericNbWidgets" val="0"/>
  </IOData>
  <IOData name="nodeWidget-1">
   <uint name="nbChildren" val="0"/>
  </IOData>
  <vector2f name="nodeInputPos-1-0">
   <float name="0" val="112.64"/>
   <float name="1" val="1267.2"/>
  </vector2f>
  <vector2f name="nodeInputPos-1-1">
   <float name="0" val="112.64"/>
   <float name="1" val="647.68"/>
  </vector2f>
  <vector2f name="nodeInputPos-1-2">
   <float name="0" val="112.64"/>
   <float name="1" val="28.16"/>
  </vector2f>
  <vector2f name="nodeOutputPos-1-0">
   <float name="0" val="132"/>
   <float name="1" val="66"/>
  </vector2f>
 </IOData>
 <IOData name="nodeWidget-0">
  <uint name="nbChildren" val="2"/>
  <IOData name="childWidget-0">
   <uint name="nbChildren" val="1"/>
   <IOData name="childWidget-0">
    <bool name="intAttribKeyframed" val="0"/>
    <int name="intAttribMinVal" val="1"/>
    <int name="intAttribMaxVal" val="200"/>
    <IOData name="intAttribCurve">
     <int name="currentVal" val="2"/>
     <uint name="nbCurves" val="1"/>
     <IOData name="curve-0">
      <int name="interpType" val="0"/>
      <int name="leftType" val="0"/>
      <int name="rightType" val="0"/>
      <IOData name="interpolator">
       <uint name="nbPoints" val="1"/>
       <uint name="nbTangents" val="0"/>
       <vector2f name="controlPoint-0">
        <float name="0" val="0"/>
        <float name="1" val="2"/>
       </vector2f>
      </IOData>
     </IOData>
    </IOData>
    <uint name="nbChildren" val="0"/>
   </IOData>
  </IOData>
  <IOData name="childWidget-1">
   <uint name="nbChildren" val="0"/>
  </IOData>
 </IOData>
 <vector2f name="nodeInputPos-0-0">
  <float name="0" val="112.64"/>
  <float name="1" val="28.16"/>
 </vector2f>
 <vector2f name="nodeInputPos-0-1">
  <float name="0" val="112.64"/>
  <float name="1" val="28.16"/>
 </vector2f>
 <vector2f name="nodeInputPos-0-2">
  <float name="0" val="112.64"/>
  <float name="1" val="28.16"/>
 </vector2f>
 <vector2f name="nodeInputPos-0-3">
  <float name="0" val="112.64"/>
  <float name="1" val="28.16"/>
 </vector2f>
 <vector2f name="nodeOutputPos-0-0">
  <float name="0" val="132"/>
  <float name="1" val="66"/>
 </vector2f>
</Gratin>
