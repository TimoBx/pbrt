<gratin file="customNode">
 <string val="imgRotate" name="customHandleName"/>
 <string val="transform/" name="customHandlePath"/>
 <string val="rotate an image" name="customHandleDesc"/>
 <string val="Rotate the input image. Theta is the rotation angle in radians. " name="customHandleHelp"/>
 <int val="1" name="customHandleInputDescSize"/>
 <int val="1" name="customHandleOutputDescSize"/>
 <string val="img" name="customHandleInputDesc-0"/>
 <string val="rotated" name="customHandleOutputDesc-0"/>
 <string val="imgGeneric" name="origHandleName"/>
 <string val="generic/" name="origHandlePath"/>
 <string val="Generic node for image processing" name="origHandleDesc"/>
 <string val="This node was designed to create custom shaders&#xa;The settings widget allows to modify input, output parameters&#xa;as well as the output image sizes.&#xa;&#xa;WARNING1: you will be able to modify the number of inputs/outputs&#xa;only if the node is entirely disconnected.&#xa;WARNING2: input/output names will not be modified if a custom node is created&#xa;from this node beacause these names should be edited directly in the setting widget&#xa;WARNING3: modifying the settings of a node will remove all previously&#xa;defined keyframes&#xa;&#xa;* Special data allows to modify the output image (using a multiple of&#xa;the input size, plus an offset vector&#xa;Check use mouse if you want to interact with the mouse&#xa;&#xa;* Input data allows to add/remove/displace input data (only if disconnected)&#xa;&#xa;* Output data allows to add/remove/displace output data (only if disconnected)&#xa;&#xa;* Param data allows to add/remove parameters that will automatically be &#xa;included in your shader.&#xa;For each of them you may choose a proper name, type, and min/max/default values.&#xa;Check keyframes if you want your parameter to be accessible&#xa; through the animation widget&#xa;&#xa;In the node interface itself:&#xa;Source tab contains the head and body of your GLSL source (only the body is editable)&#xa;Params tab contains the defined widgets according to your setting choices&#xa;Log tab contains compilation errors&#xa;&#xa;Once your settings and source completed, click on apply to see the result&#xa;" name="origHandleHelp"/>
 <int val="1" name="origHandleInputDescSize"/>
 <int val="1" name="origHandleOutputDescSize"/>
 <string val="img" name="origHandleInputDesc-0"/>
 <string val="rotated" name="origHandleOutputDesc-0"/>
 <string val="imgGeneric" name="nodeName-0"/>
 <string val="generic/" name="nodePath-0"/>
 <uint val="15" name="nodeId-0"/>
 <uint val="0" name="nodeGraphId-0"/>
 <uint val="1" name="nbInputs-0"/>
 <uint val="1" name="nbOutputs-0"/>
 <vector2f name="nodePos-0">
  <float val="134.558" name="0"/>
  <float val="-1071.17" name="1"/>
 </vector2f>
 <bool val="0" name="nodeGrouped-0"/>
 <bool val="1" name="nodeHasWidget-0"/>
 <IOData name="node-0">
  <string val="img" name="genericIName-0"/>
  <string val="rotated" name="genericOName-0"/>
  <vector2f name="genericTSize">
   <float val="1" name="0"/>
   <float val="1" name="1"/>
  </vector2f>
  <vector2f name="genericTOffset">
   <float val="0" name="0"/>
   <float val="0" name="1"/>
  </vector2f>
  <bool val="0" name="genericNeedMouse"/>
  <uint val="1" name="genericNbSliderFloat"/>
  <bool val="1" name="genericSliderFloatIsKF-0"/>
  <string val="theta" name="genericSliderFloatName-0"/>
  <uint val="0" name="genericNbSliderInt"/>
  <string val="#version 330&#xa;&#xa;in vec2 texcoord;&#xa;&#xa;layout(location = 0) out vec4 rotated;&#xa;uniform sampler2D img;&#xa;uniform float theta;&#xa;" name="genericHead"/>
  <string val="vec2 rotate(in vec2 c,in vec2 t,in float r) {&#xa;  // rotation r with t = center of rotation&#xa;  float cr = cos(r);&#xa;  float sr = sin(r);&#xa;&#xa;  mat3 T1 = mat3(1.0f,0.0f,0.0f,&#xa;&#x9;     0.0f,1.0f,0.0f,&#xa;    &#x9;    -t.x,-t.y,1.0f);&#xa;&#xa;  mat3 T2 = mat3(1.0f,0.0f,0.0f,&#xa;&#x9;     0.0f,1.0f,0.0f,&#xa;&#x9;     t.x,t.y,1.0f);&#xa;&#xa;  mat3 R = mat3(cr,-sr,0.0f,&#xa;&#x9;   sr,cr,0.0f,&#xa;&#x9;   0.0f,0.0f,1.0f);&#xa;&#xa;  return (T2*R*T1*vec3(c,1.0f)).xy;&#xa;}&#xa;&#xa;&#xa;void main() {&#xa;vec2 newcoord = rotate(texcoord,vec2(0.5),theta);&#xa;  rotated = texture(img,newcoord);&#xa;}&#xa;" name="genericBody"/>
 </IOData>
 <IOData name="nodeWidget-0">
  <uint val="1" name="nbChildren"/>
  <IOData name="childWidget-0">
   <IOData name="keyframedFloat">
    <float val="0" name="minVal"/>
    <float val="6.28319" name="maxVal"/>
    <float val="0" name="currentVal"/>
    <IOData name="curve">
     <int val="0" name="interpType"/>
     <int val="0" name="leftType"/>
     <int val="0" name="rightType"/>
     <IOData name="interpolator">
      <uint val="1" name="nbPoints"/>
      <uint val="0" name="nbTangents"/>
      <vector2f name="controlPoint-0">
       <float val="0" name="0"/>
       <float val="0" name="1"/>
      </vector2f>
     </IOData>
    </IOData>
   </IOData>
   <float val="0" name="sliderVal"/>
   <float val="0" name="sliderMinVal"/>
   <float val="6.28319" name="sliderMaxVal"/>
   <uint val="0" name="nbChildren"/>
  </IOData>
 </IOData>
 <vector2f name="nodeInputPos-0-0">
  <float val="118" name="0"/>
  <float val="-1230.8" name="1"/>
 </vector2f>
 <vector2f name="nodeOutputPos-0-0">
  <float val="150" name="0"/>
  <float val="-181" name="1"/>
 </vector2f>
</gratin>
